{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\CodeClash\\\\codeclash-frontend\\\\codeclash-frontend\\\\src\\\\components\\\\QuizComponent.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"../styling/QuizStyles.css\";\nimport { Clock, Trophy, CheckCircle, XCircle, Menu, X, User, ChevronDown, Check } from 'lucide-react';\nimport Navbar2 from \"../components/Navbar2\";\n// Import your question data here\n// import { btechCSQuestions } from \"./data/qestions/btech-cs-questions\";\n// import { btechQuestions } from \"./data/qestions/btech-questions\";\n// import { generalKnowledgeQuestions } from \"./data/qestions/general-knowledge-questions\";\n// import { logicalQuestions } from \"./data/qestions/logical-questions\";\n// import { technicalQuestions } from \"./data/qestions/technical-questions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QUESTION_TYPES = [{\n  label: \"BTech CS\",\n  value: \"btechCSQuestions\"\n}, {\n  label: \"BTech General\",\n  value: \"btechQuestions\"\n}, {\n  label: \"General Knowledge\",\n  value: \"generalKnowledgeQuestions\"\n}, {\n  label: \"Logical Reasoning\",\n  value: \"logicalQuestions\"\n}, {\n  label: \"Technical\",\n  value: \"technicalQuestions\"\n}];\n\n// Mock questions for demonstration - replace with your actual imports\nconst QUESTIONS_MAP = {\n  btechCSQuestions: [{\n    question: \"What does CPU stand for?\",\n    options: [\"Central Processing Unit\", \"Computer Personal Unit\", \"Central Processor Unit\", \"Central Process Unit\"],\n    correctAnswer: \"Central Processing Unit\"\n  }, {\n    question: \"Which of the following is not a programming language?\",\n    options: [\"Java\", \"Python\", \"HTML\", \"Photoshop\"],\n    correctAnswer: \"Photoshop\"\n  }\n  // More questions would be here\n  ],\n  btechQuestions: [{\n    question: \"What is the SI unit of force?\",\n    options: [\"Newton\", \"Joule\", \"Watt\", \"Pascal\"],\n    correctAnswer: \"Newton\"\n  }\n  // More questions would be here\n  ],\n  generalKnowledgeQuestions: [{\n    question: \"Which planet is known as the Red Planet?\",\n    options: [\"Venus\", \"Mars\", \"Jupiter\", \"Saturn\"],\n    correctAnswer: \"Mars\"\n  }\n  // More questions would be here\n  ],\n  logicalQuestions: [{\n    question: \"If all Zips are Zaps, and some Zaps are Zops, then:\",\n    options: [\"All Zips are Zops\", \"Some Zips are Zops\", \"No Zips are Zops\", \"Cannot be determined\"],\n    correctAnswer: \"Some Zips are Zops\"\n  }\n  // More questions would be here\n  ],\n  technicalQuestions: [{\n    question: \"What is the main function of an operating system?\",\n    options: [\"To provide a user interface\", \"To manage hardware resources\", \"To run applications\", \"All of the above\"],\n    correctAnswer: \"All of the above\"\n  }\n  // More questions would be here\n  ]\n};\nfunction shuffle(arr) {\n  return [...arr].map(v => [Math.random(), v]).sort((a, b) => a[0] - b[0]).map(a => a[1]);\n}\n\n// Simple toast notification system\nconst Toast = ({\n  message,\n  type,\n  onClose\n}) => {\n  _s();\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      onClose();\n    }, 3000);\n    return () => clearTimeout(timer);\n  }, [onClose]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `toast ${type}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toast-content\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toast-close\",\n      onClick: onClose,\n      children: /*#__PURE__*/_jsxDEV(X, {\n        size: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n// Select Component\n_s(Toast, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Toast;\nconst Select = ({\n  label,\n  value,\n  onChange,\n  options\n}) => {\n  _s2();\n  const [isOpen, setIsOpen] = useState(false);\n  const selectRef = useRef(null);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (selectRef.current && !selectRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n  const selectedOption = options.find(option => option.value === value);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"select-container\",\n    ref: selectRef,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"select-label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"select-trigger\",\n      onClick: () => setIsOpen(!isOpen),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: selectedOption ? selectedOption.label : \"Select...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChevronDown, {\n        size: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select-content\",\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `select-item ${value === option.value ? 'selected' : ''}`,\n        onClick: () => {\n          onChange(option.value);\n          setIsOpen(false);\n        },\n        children: [value === option.value && /*#__PURE__*/_jsxDEV(Check, {\n          size: 16,\n          className: \"select-item-check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: option.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this)]\n      }, option.value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n\n// Main Quiz Component\n_s2(Select, \"y+Rn+yOePWMEDwICXiujn+Gqj7I=\");\n_c2 = Select;\nfunction QuizComponent() {\n  _s3();\n  const [questionType, setQuestionType] = useState(QUESTION_TYPES[0].value);\n  const [numQuestions, setNumQuestions] = useState(10);\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [quizStarted, setQuizStarted] = useState(false);\n  const [quizFinished, setQuizFinished] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(10);\n  const timerRef = useRef(null);\n  const [shuffledAnswers, setShuffledAnswers] = useState([]);\n  const [resultSaved, setResultSaved] = useState(false);\n  const [saving, setSaving] = useState(false);\n  const [toast, setToast] = useState(null);\n  useEffect(() => {\n    if (quizStarted && questions.length > 0) {\n      setShuffledAnswers(shuffle([...(questions[currentQuestionIndex].options || questions[currentQuestionIndex].answers || [])]));\n      setTimeLeft(10);\n      setSelectedAnswer(\"\");\n    }\n  }, [quizStarted, currentQuestionIndex, questions]);\n  useEffect(() => {\n    if (!quizStarted || quizFinished) return;\n    if (timeLeft > 0) {\n      timerRef.current = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n    } else {\n      handleNextQuestion();\n    }\n    return () => clearTimeout(timerRef.current);\n  }, [quizStarted, quizFinished, timeLeft]);\n  const handleStart = () => {\n    const all = QUESTIONS_MAP[questionType] || [];\n    const selected = shuffle(all).slice(0, Math.min(numQuestions, all.length));\n    setQuestions(selected);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setQuizFinished(false);\n    setQuizStarted(true);\n    setResultSaved(false);\n  };\n  const handleAnswer = ans => {\n    setSelectedAnswer(ans);\n    if (ans === questions[currentQuestionIndex].correctAnswer || ans === questions[currentQuestionIndex].correct_answer) {\n      setScore(s => s + 1);\n    }\n    setTimeout(() => handleNextQuestion(), 800);\n  };\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(i => i + 1);\n    } else {\n      setQuizFinished(true);\n      setQuizStarted(false);\n    }\n  };\n  const handleRestart = () => {\n    setQuizStarted(false);\n    setQuizFinished(false);\n    setQuestions([]);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setTimeLeft(10);\n    setSelectedAnswer(\"\");\n    setResultSaved(false);\n  };\n  const showToast = (message, type = \"success\") => {\n    setToast({\n      message,\n      type\n    });\n  };\n  const closeToast = () => {\n    setToast(null);\n  };\n  useEffect(() => {\n    if (quizFinished && !resultSaved && questions.length > 0) {\n      setSaving(true);\n      const username = localStorage.getItem(\"Username\") || \"anonymous\";\n      const now = new Date();\n      const date = now.toISOString().split(\"T\")[0];\n      const time = now.toTimeString().split(\" \")[0];\n      const finalScore = score;\n\n      // Uncomment this for actual API call\n\n      fetch('http://localhost:8788/api/quiz/saveResult', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          score: finalScore,\n          date,\n          time,\n          No_of_questions: questions.length\n        })\n      }).then(res => res.text()).then(text => {\n        setResultSaved(true);\n        setSaving(false);\n        showToast(`Your score of ${finalScore}/${questions.length} has been saved.`);\n      }).catch(() => {\n        setSaving(false);\n        showToast(\"There was a problem saving your quiz result.\", \"error\");\n      });\n\n      // Simulate API call (replace with your actual API endpoint)\n      setTimeout(() => {\n        setSaving(false);\n        setResultSaved(true);\n        showToast(`Your score of ${finalScore}/${questions.length} has been saved.`);\n      }, 1000);\n    }\n  }, [quizFinished, resultSaved, questions, score]);\n  const progressPercentage = quizStarted ? (currentQuestionIndex + 1) / questions.length * 100 : 0;\n  const timePercentage = timeLeft / 10 * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-app\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"quiz-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"quiz-title\",\n        children: \"Interactive Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), !quizStarted && !quizFinished && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-card setup-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-accent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"card-title\",\n            children: \"Select Quiz Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              label: \"Question Type\",\n              value: questionType,\n              onChange: setQuestionType,\n              options: QUESTION_TYPES\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              label: \"Number of Questions\",\n              value: numQuestions.toString(),\n              onChange: value => setNumQuestions(Number(value)),\n              options: [5, 10, 15, 20].map(n => ({\n                label: n.toString(),\n                value: n.toString()\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"start-button\",\n            onClick: handleStart,\n            children: \"Start Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this), quizStarted && !quizFinished && questions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-card question-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-accent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-counter\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"question-number\",\n                children: currentQuestionIndex + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"question-total\",\n                children: [\"of \", questions.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"score-badge\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Score: \", score]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-fill\",\n              style: {\n                width: `${progressPercentage}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"question-text\",\n              children: questions[currentQuestionIndex].question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"answer-options\",\n              children: shuffledAnswers.map((answer, index) => {\n                const isCorrect = selectedAnswer && (answer === questions[currentQuestionIndex].correctAnswer || answer === questions[currentQuestionIndex].correct_answer);\n                const isSelected = selectedAnswer === answer;\n                const isWrong = isSelected && !isCorrect;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `answer-option ${isSelected ? \"selected\" : \"\"} ${isCorrect ? \"correct\" : isWrong ? \"incorrect\" : \"\"}`,\n                  onClick: () => !selectedAnswer && handleAnswer(answer),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"radio\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"radio-dot\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 360,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"answer-text\",\n                    children: answer\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 25\n                  }, this), isCorrect && /*#__PURE__*/_jsxDEV(CheckCircle, {\n                    className: \"answer-icon correct\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 39\n                  }, this), isWrong && /*#__PURE__*/_jsxDEV(XCircle, {\n                    className: \"answer-icon incorrect\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 37\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timer\",\n            children: [/*#__PURE__*/_jsxDEV(Clock, {\n              className: \"timer-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timer-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"timer-fill\",\n                style: {\n                  width: `${timePercentage}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"timer-text\",\n              children: [timeLeft, \"s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"timer-hint\",\n            children: [\"Auto-advancing to next question in \", timeLeft, \" seconds\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, this), quizFinished && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-card result-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-accent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"trophy-container\",\n            children: /*#__PURE__*/_jsxDEV(Trophy, {\n              className: \"trophy-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"result-title\",\n            children: \"Quiz Completed!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-score\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"score-value\",\n              children: [score, \" / \", questions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"score-percentage\",\n              children: [Math.round(score / questions.length * 100), \"% Correct\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this), saving && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"saving-text\",\n            children: \"Saving your results...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"restart-button\",\n            onClick: handleRestart,\n            children: \"Try Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), toast && /*#__PURE__*/_jsxDEV(Toast, {\n      message: toast.message,\n      type: toast.type,\n      onClose: closeToast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 5\n  }, this);\n}\n_s3(QuizComponent, \"Bu1T3ohP+4LllXopxiqvPqrhuKo=\");\n_c3 = QuizComponent;\nexport default QuizComponent;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Toast\");\n$RefreshReg$(_c2, \"Select\");\n$RefreshReg$(_c3, \"QuizComponent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Clock","Trophy","CheckCircle","XCircle","Menu","X","User","ChevronDown","Check","Navbar2","jsxDEV","_jsxDEV","QUESTION_TYPES","label","value","QUESTIONS_MAP","btechCSQuestions","question","options","correctAnswer","btechQuestions","generalKnowledgeQuestions","logicalQuestions","technicalQuestions","shuffle","arr","map","v","Math","random","sort","a","b","Toast","message","type","onClose","_s","timer","setTimeout","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","_c","Select","onChange","_s2","isOpen","setIsOpen","selectRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","selectedOption","find","option","ref","_c2","QuizComponent","_s3","questionType","setQuestionType","numQuestions","setNumQuestions","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswer","setSelectedAnswer","score","setScore","quizStarted","setQuizStarted","quizFinished","setQuizFinished","timeLeft","setTimeLeft","timerRef","shuffledAnswers","setShuffledAnswers","resultSaved","setResultSaved","saving","setSaving","toast","setToast","length","answers","handleNextQuestion","handleStart","all","selected","slice","min","handleAnswer","ans","correct_answer","s","i","handleRestart","showToast","closeToast","username","localStorage","getItem","now","Date","date","toISOString","split","time","toTimeString","finalScore","fetch","method","headers","body","JSON","stringify","No_of_questions","then","res","text","catch","progressPercentage","timePercentage","toString","Number","n","style","width","answer","index","isCorrect","isSelected","isWrong","round","_c3","$RefreshReg$"],"sources":["D:/React/CodeClash/codeclash-frontend/codeclash-frontend/src/components/QuizComponent.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"../styling/QuizStyles.css\";\nimport { Clock, Trophy, CheckCircle, XCircle, Menu, X, User, ChevronDown, Check } from 'lucide-react';\nimport Navbar2 from \"../components/Navbar2\"\n// Import your question data here\n// import { btechCSQuestions } from \"./data/qestions/btech-cs-questions\";\n// import { btechQuestions } from \"./data/qestions/btech-questions\";\n// import { generalKnowledgeQuestions } from \"./data/qestions/general-knowledge-questions\";\n// import { logicalQuestions } from \"./data/qestions/logical-questions\";\n// import { technicalQuestions } from \"./data/qestions/technical-questions\";\n\nconst QUESTION_TYPES = [\n  { label: \"BTech CS\", value: \"btechCSQuestions\" },\n  { label: \"BTech General\", value: \"btechQuestions\" },\n  { label: \"General Knowledge\", value: \"generalKnowledgeQuestions\" },\n  { label: \"Logical Reasoning\", value: \"logicalQuestions\" },\n  { label: \"Technical\", value: \"technicalQuestions\" },\n];\n\n// Mock questions for demonstration - replace with your actual imports\nconst QUESTIONS_MAP = {\n  btechCSQuestions: [\n    {\n      question: \"What does CPU stand for?\",\n      options: [\"Central Processing Unit\", \"Computer Personal Unit\", \"Central Processor Unit\", \"Central Process Unit\"],\n      correctAnswer: \"Central Processing Unit\",\n    },\n    {\n      question: \"Which of the following is not a programming language?\",\n      options: [\"Java\", \"Python\", \"HTML\", \"Photoshop\"],\n      correctAnswer: \"Photoshop\",\n    },\n    // More questions would be here\n  ],\n  btechQuestions: [\n    {\n      question: \"What is the SI unit of force?\",\n      options: [\"Newton\", \"Joule\", \"Watt\", \"Pascal\"],\n      correctAnswer: \"Newton\",\n    },\n    // More questions would be here\n  ],\n  generalKnowledgeQuestions: [\n    {\n      question: \"Which planet is known as the Red Planet?\",\n      options: [\"Venus\", \"Mars\", \"Jupiter\", \"Saturn\"],\n      correctAnswer: \"Mars\",\n    },\n    // More questions would be here\n  ],\n  logicalQuestions: [\n    {\n      question: \"If all Zips are Zaps, and some Zaps are Zops, then:\",\n      options: [\"All Zips are Zops\", \"Some Zips are Zops\", \"No Zips are Zops\", \"Cannot be determined\"],\n      correctAnswer: \"Some Zips are Zops\",\n    },\n    // More questions would be here\n  ],\n  technicalQuestions: [\n    {\n      question: \"What is the main function of an operating system?\",\n      options: [\n        \"To provide a user interface\",\n        \"To manage hardware resources\",\n        \"To run applications\",\n        \"All of the above\",\n      ],\n      correctAnswer: \"All of the above\",\n    },\n    // More questions would be here\n  ],\n};\n\nfunction shuffle(arr) {\n  return [...arr]\n    .map((v) => [Math.random(), v])\n    .sort((a, b) => a[0] - b[0])\n    .map((a) => a[1]);\n}\n\n// Simple toast notification system\nconst Toast = ({ message, type, onClose }) => {\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      onClose();\n    }, 3000);\n    return () => clearTimeout(timer);\n  }, [onClose]);\n\n  return (\n    <div className={`toast ${type}`}>\n      <div className=\"toast-content\">\n        <p>{message}</p>\n      </div>\n      <button className=\"toast-close\" onClick={onClose}>\n        <X size={16} />\n      </button>\n    </div>\n  );\n};\n\n\n// Select Component\nconst Select = ({ label, value, onChange, options }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const selectRef = useRef(null);\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (selectRef.current && !selectRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  const selectedOption = options.find(option => option.value === value);\n\n  return (\n    <div className=\"select-container\" ref={selectRef}>\n      <label className=\"select-label\">{label}</label>\n      <button \n        type=\"button\" \n        className=\"select-trigger\" \n        onClick={() => setIsOpen(!isOpen)}\n      >\n        <span>{selectedOption ? selectedOption.label : \"Select...\"}</span>\n        <ChevronDown size={16} />\n      </button>\n      \n      {isOpen && (\n        <div className=\"select-content\">\n          {options.map((option) => (\n            <div\n              key={option.value}\n              className={`select-item ${value === option.value ? 'selected' : ''}`}\n              onClick={() => {\n                onChange(option.value);\n                setIsOpen(false);\n              }}\n            >\n              {value === option.value && <Check size={16} className=\"select-item-check\" />}\n              <span>{option.label}</span>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Main Quiz Component\nfunction QuizComponent() {\n  const [questionType, setQuestionType] = useState(QUESTION_TYPES[0].value);\n  const [numQuestions, setNumQuestions] = useState(10);\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [quizStarted, setQuizStarted] = useState(false);\n  const [quizFinished, setQuizFinished] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(10);\n  const timerRef = useRef(null);\n  const [shuffledAnswers, setShuffledAnswers] = useState([]);\n  const [resultSaved, setResultSaved] = useState(false);\n  const [saving, setSaving] = useState(false);\n  const [toast, setToast] = useState(null);\n\n  useEffect(() => {\n    if (quizStarted && questions.length > 0) {\n      setShuffledAnswers(\n        shuffle([...(questions[currentQuestionIndex].options || questions[currentQuestionIndex].answers || [])])\n      );\n      setTimeLeft(10);\n      setSelectedAnswer(\"\");\n    }\n  }, [quizStarted, currentQuestionIndex, questions]);\n\n  useEffect(() => {\n    if (!quizStarted || quizFinished) return;\n    if (timeLeft > 0) {\n      timerRef.current = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n    } else {\n      handleNextQuestion();\n    }\n    return () => clearTimeout(timerRef.current);\n  }, [quizStarted, quizFinished, timeLeft]);\n\n  const handleStart = () => {\n    const all = QUESTIONS_MAP[questionType] || [];\n    const selected = shuffle(all).slice(0, Math.min(numQuestions, all.length));\n    setQuestions(selected);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setQuizFinished(false);\n    setQuizStarted(true);\n    setResultSaved(false);\n  };\n\n  const handleAnswer = (ans) => {\n    setSelectedAnswer(ans);\n    if (\n      ans === questions[currentQuestionIndex].correctAnswer ||\n      ans === questions[currentQuestionIndex].correct_answer\n    ) {\n      setScore((s) => s + 1);\n    }\n    setTimeout(() => handleNextQuestion(), 800);\n  };\n\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex((i) => i + 1);\n    } else {\n      setQuizFinished(true);\n      setQuizStarted(false);\n    }\n  };\n\n  const handleRestart = () => {\n    setQuizStarted(false);\n    setQuizFinished(false);\n    setQuestions([]);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setTimeLeft(10);\n    setSelectedAnswer(\"\");\n    setResultSaved(false);\n  };\n\n  const showToast = (message, type = \"success\") => {\n    setToast({ message, type });\n  };\n\n  const closeToast = () => {\n    setToast(null);\n  };\n\n  useEffect(() => {\n    if (quizFinished && !resultSaved && questions.length > 0) {\n      setSaving(true);\n      const username = localStorage.getItem(\"Username\") || \"anonymous\";\n      const now = new Date();\n      const date = now.toISOString().split(\"T\")[0];\n      const time = now.toTimeString().split(\" \")[0];\n      const finalScore = score;\n\n      // Uncomment this for actual API call\n      \n      fetch('http://localhost:8788/api/quiz/saveResult', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, score: finalScore, date, time, No_of_questions: questions.length })\n      })\n        .then(res => res.text())\n        .then(text => {\n          setResultSaved(true);\n          setSaving(false);\n          showToast(`Your score of ${finalScore}/${questions.length} has been saved.`);\n        })\n        .catch(() => {\n          setSaving(false);\n          showToast(\"There was a problem saving your quiz result.\", \"error\");\n        });\n  \n\n      // Simulate API call (replace with your actual API endpoint)\n      setTimeout(() => {\n        setSaving(false);\n        setResultSaved(true);\n        showToast(`Your score of ${finalScore}/${questions.length} has been saved.`);\n      }, 1000);\n    }\n  }, [quizFinished, resultSaved, questions, score]);\n\n  const progressPercentage = quizStarted ? ((currentQuestionIndex + 1) / questions.length) * 100 : 0;\n  const timePercentage = (timeLeft / 10) * 100;\n\n  return (\n    <div className=\"quiz-app\">\n      <Navbar2 />\n      \n      <main className=\"quiz-container\">\n        <h1 className=\"quiz-title\">Interactive Quiz</h1>\n\n        {!quizStarted && !quizFinished && (\n          <div className=\"quiz-card setup-card\">\n            <div className=\"card-accent\"></div>\n            <div className=\"card-content\">\n              <h2 className=\"card-title\">Select Quiz Options</h2>\n\n              <div className=\"form-group\">\n                <Select \n                  label=\"Question Type\"\n                  value={questionType}\n                  onChange={setQuestionType}\n                  options={QUESTION_TYPES}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <Select \n                  label=\"Number of Questions\"\n                  value={numQuestions.toString()}\n                  onChange={(value) => setNumQuestions(Number(value))}\n                  options={[5, 10, 15, 20].map(n => ({ label: n.toString(), value: n.toString() }))}\n                />\n              </div>\n\n              <button className=\"start-button\" onClick={handleStart}>\n                Start Quiz\n              </button>\n            </div>\n          </div>\n        )}\n\n        {quizStarted && !quizFinished && questions.length > 0 && (\n          <div className=\"quiz-card question-card\">\n            <div className=\"card-accent\"></div>\n            <div className=\"card-content\">\n              <div className=\"question-header\">\n                <div className=\"question-counter\">\n                  <span className=\"question-number\">{currentQuestionIndex + 1}</span>\n                  <span className=\"question-total\">of {questions.length}</span>\n                </div>\n                <div className=\"score-badge\">\n                  <span>Score: {score}</span>\n                </div>\n              </div>\n\n              <div className=\"progress-bar\">\n                <div className=\"progress-fill\" style={{ width: `${progressPercentage}%` }}></div>\n              </div>\n\n              <div className=\"question-content\">\n                <h3 className=\"question-text\">{questions[currentQuestionIndex].question}</h3>\n\n                <div className=\"answer-options\">\n                  {shuffledAnswers.map((answer, index) => {\n                    const isCorrect =\n                      selectedAnswer &&\n                      (answer === questions[currentQuestionIndex].correctAnswer ||\n                        answer === questions[currentQuestionIndex].correct_answer);\n                    const isSelected = selectedAnswer === answer;\n                    const isWrong = isSelected && !isCorrect;\n\n                    return (\n                      <div\n                        key={index}\n                        className={`answer-option ${isSelected ? \"selected\" : \"\"} ${\n                          isCorrect ? \"correct\" : isWrong ? \"incorrect\" : \"\"\n                        }`}\n                        onClick={() => !selectedAnswer && handleAnswer(answer)}\n                      >\n                        <div className=\"radio\">\n                          <div className=\"radio-dot\"></div>\n                        </div>\n                        <span className=\"answer-text\">{answer}</span>\n                        {isCorrect && <CheckCircle className=\"answer-icon correct\" />}\n                        {isWrong && <XCircle className=\"answer-icon incorrect\" />}\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n\n              <div className=\"timer\">\n                <Clock className=\"timer-icon\" />\n                <div className=\"timer-bar\">\n                  <div className=\"timer-fill\" style={{ width: `${timePercentage}%` }}></div>\n                </div>\n                <span className=\"timer-text\">{timeLeft}s</span>\n              </div>\n\n              <p className=\"timer-hint\">Auto-advancing to next question in {timeLeft} seconds</p>\n            </div>\n          </div>\n        )}\n\n        {quizFinished && (\n          <div className=\"quiz-card result-card\">\n            <div className=\"card-accent\"></div>\n            <div className=\"card-content\">\n              <div className=\"trophy-container\">\n                <Trophy className=\"trophy-icon\" />\n              </div>\n\n              <h2 className=\"result-title\">Quiz Completed!</h2>\n\n              <div className=\"result-score\">\n                <p className=\"score-value\">\n                  {score} / {questions.length}\n                </p>\n                <p className=\"score-percentage\">\n                  {Math.round((score / questions.length) * 100)}% Correct\n                </p>\n              </div>\n\n              {saving && <p className=\"saving-text\">Saving your results...</p>}\n\n              <button className=\"restart-button\" onClick={handleRestart}>\n                Try Again\n              </button>\n            </div>\n          </div>\n        )}\n      </main>\n\n      {toast && (\n        <Toast \n          message={toast.message} \n          type={toast.type} \n          onClose={closeToast} \n        />\n      )}\n    </div>\n  );\n}\n\nexport default QuizComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}