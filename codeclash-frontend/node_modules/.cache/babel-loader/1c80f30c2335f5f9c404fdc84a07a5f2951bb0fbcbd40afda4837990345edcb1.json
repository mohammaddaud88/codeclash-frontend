{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\React\\\\CodeClash\\\\codeclash-frontend\\\\codeclash-frontend\\\\src\\\\components\\\\PracticePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport Navbar2 from \"./Navbar2\";\nimport Editor from \"@monaco-editor/react\";\nimport problems from \"../data/problems.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PracticePage() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [problem, setProblem] = useState(null);\n  const [code, setCode] = useState(\"\");\n  const [language, setLanguage] = useState(\"java\");\n  const [output, setOutput] = useState(\"\");\n  const [isRunning, setIsRunning] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [testResults, setTestResults] = useState([]);\n  const [testCaseIndex, setTestCaseIndex] = useState(0);\n  const [singleTestResult, setSingleTestResult] = useState(null);\n  const [customInput, setCustomInput] = useState(\"\");\n  const [customResult, setCustomResult] = useState(null);\n  const input = (problem === null || problem === void 0 ? void 0 : problem.testCases.map(tc => tc.input)) || \"\";\n\n  // Default starter code templates for different languages\n  const starterCodeTemplates = {\n    java: `class Solution {\n}`\n  };\n\n  // Add this mapping at the top of your file or before the runCode function\n  const languageIdMapping = {\n    java: 62\n  };\n  useEffect(() => {\n    var _location$state;\n    // Get problem from location state or redirect back to problem list\n    const problemId = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.problemId;\n    if (!problemId) {\n      navigate('/problems');\n      return;\n    }\n\n    // Find the problem in problems.json\n    const selectedProblem = problems.find(p => p.title === problemId);\n    if (selectedProblem) {\n      setProblem(selectedProblem);\n      // Set initial starter code based on selected language\n      setCode(starterCodeTemplates[language] || '');\n    } else {\n      toast.error('Problem not found');\n      navigate('/problems');\n    }\n  }, [location, navigate, language]);\n\n  // Change language and update starter code\n  const handleLanguageChange = newLanguage => {\n    setLanguage(newLanguage);\n    setCode(starterCodeTemplates[newLanguage]);\n  };\n\n  // Mock function to run code (in a real app, this would send code to a backend)\n  const runCode = async () => {\n    console.log(code);\n    console.log(input);\n    setOutput(\"\");\n    try {\n      const token = sessionStorage.getItem(\"Authtoken\");\n      // console.log(token);\n      if (!token) throw new Error(\"Unauthorized\");\n      const response = await fetch(\"http://localhost:8788/api/coderun\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          code,\n          language,\n          testCaseInput\n        })\n      });\n      const result = await response.json();\n      setOutput(result.output);\n    } catch (error) {\n      toast.error('Error running code');\n      console.error(error);\n    } finally {\n      setIsRunning(false);\n    }\n  };\n  const handleRunSingleTestCase = async () => {\n    if (!problem || !problem.testCases || problem.testCases.length === 0) return;\n    setIsRunning(true);\n    setSingleTestResult(null);\n    const token = sessionStorage.getItem(\"Authtoken\");\n    if (!token) {\n      toast.error(\"Unauthorized\");\n      setIsRunning(false);\n      return;\n    }\n    const testCase = problem.testCases[testCaseIndex];\n    try {\n      const response = await fetch(\"http://localhost:8788/api/coderun\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          code,\n          language,\n          testCaseInput: testCase.input\n        })\n      });\n      const result = await response.json();\n      const isPassed = result.output.trim() === testCase.expectedOutput.trim();\n      setSingleTestResult({\n        input: testCase.input,\n        expected: testCase.expectedOutput,\n        output: result.output.trim(),\n        passed: isPassed\n      });\n    } catch (error) {\n      setSingleTestResult({\n        input: testCase.input,\n        expected: testCase.expectedOutput,\n        output: \"Error\",\n        passed: false\n      });\n      toast.error('Error running test case');\n    } finally {\n      setIsRunning(false);\n    }\n  };\n  const handleRunNextTestCase = () => {\n    if (problem && testCaseIndex < problem.testCases.length - 1) {\n      setTestCaseIndex(testCaseIndex + 1);\n      setSingleTestResult(null);\n    }\n  };\n  const handleRunCustomTestCase = async () => {\n    setIsRunning(true);\n    setCustomResult(null);\n    const token = sessionStorage.getItem(\"Authtoken\");\n    if (!token) {\n      toast.error(\"Unauthorized\");\n      setIsRunning(false);\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:8788/api/coderun\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          code,\n          language,\n          testCaseInput: customInput\n        })\n      });\n      const result = await response.json();\n      setCustomResult(result.output.trim());\n    } catch (error) {\n      setCustomResult(\"Error\");\n      toast.error('Error running custom test case');\n    } finally {\n      setIsRunning(false);\n    }\n  };\n  const handleCodeChange = newCode => {\n    setCode(newCode);\n  };\n\n  // Mock function to submit and test code\n  const submitCode = async () => {\n    if (!problem) {\n      toast.error('No problem selected');\n      return;\n    }\n    setIsSubmitting(true);\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/submissions`, {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          problemId: problem.id,\n          code,\n          language\n        })\n      });\n      const result = await response.json();\n      if (result.success) {\n        toast.success('Code submitted successfully!');\n        // Additional logic for successful submission\n      } else {\n        toast.error(result.message || 'Submission failed');\n      }\n    } catch (error) {\n      toast.error('Error submitting code');\n      console.error(error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const testCode = () => {\n    setIsSubmitting(true);\n    setTestResults([]);\n\n    // Simulate code testing delay\n    setTimeout(() => {\n      // Mock test results\n      const results = problem.testCases.map((testCase, index) => {\n        // In a real app, you would actually run the code against the test cases\n        const passed = Math.random() > 0.3; // Random pass/fail for demo\n        return {\n          testCase,\n          passed,\n          output: passed ? testCase.output : \"Wrong output\"\n        };\n      });\n      setTestResults(results);\n      setIsSubmitting(false);\n    }, 1500);\n  };\n  if (!problem) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-[#1e1e1e] text-gray-200 flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col md:flex-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"md:w-1/2 p-4 overflow-y-auto border-r border-gray-700\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"max-w-2xl mx-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold mb-4\",\n            children: problem.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prose prose-invert max-w-none\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-6\",\n              dangerouslySetInnerHTML: {\n                __html: problem.description\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Category:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 19\n                }, this), \" \", problem.category]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Input Format:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 19\n                }, this), \" \", problem.inputFormat]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Output Format:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 19\n                }, this), \" \", problem.outputFormat]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Constraints:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 19\n                }, this), \" \", problem.constraints]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"font-semibold mt-6 mb-3\",\n              children: \"Test Cases:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: problem.testCases.slice(0, 2).map((tc, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-[#252525] p-4 rounded-md\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-mono font-bold\",\n                    children: \"Input:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n                    className: \"ml-2 bg-[#333] px-2 py-1 rounded font-mono\",\n                    children: tc.input\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-mono font-bold\",\n                    children: \"Output:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n                    className: \"ml-2 bg-[#333] px-2 py-1 rounded font-mono\",\n                    children: tc.output\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 21\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), problem.testCases.length > 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4 text-gray-400 italic\",\n              children: [problem.testCases.length - 2, \" more test cases are hidden\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"md:w-1/2 flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-[#252525] p-3 border-b border-gray-700 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: language,\n            onChange: e => handleLanguageChange(e.target.value),\n            className: \"bg-[#333] text-gray-200 px-3 py-1 rounded mr-4 border border-gray-600\",\n            children: /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"java\",\n              children: \"Java\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: submitCode,\n            disabled: isSubmitting,\n            className: \"px-4 py-1 bg-green-600 text-white rounded hover:bg-green-700 disabled:opacity-50\",\n            children: isSubmitting ? \"Submitting...\" : \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1\",\n          children: /*#__PURE__*/_jsxDEV(Editor, {\n            height: \"100%\",\n            language: language,\n            value: code,\n            onChange: handleCodeChange,\n            theme: \"vs-dark\",\n            options: {\n              minimap: {\n                enabled: false\n              },\n              fontSize: 14,\n              scrollBeyondLastLine: false,\n              automaticLayout: true,\n              tabSize: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-1/3 bg-[#252525] overflow-y-auto border-t border-gray-700\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4\",\n            children: [output && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-sm font-semibold mb-2 text-gray-400\",\n                children: \"Console Output:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                className: \"bg-[#1e1e1e] p-3 rounded font-mono text-sm whitespace-pre-wrap\",\n                children: output\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }, this), problem && problem.testCases && problem.testCases.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-sm font-semibold mb-2 text-gray-400\",\n                children: [\"Test Case \", testCaseIndex + 1, \" of \", problem.testCases.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleRunSingleTestCase,\n                disabled: isRunning,\n                className: \"px-4 py-1 bg-blue-600 text-white rounded mr-2 hover:bg-blue-700 disabled:opacity-50\",\n                children: isRunning ? \"Running...\" : \"Run Test Case\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleRunNextTestCase,\n                disabled: testCaseIndex >= problem.testCases.length - 1,\n                className: \"px-4 py-1 bg-gray-600 text-white rounded hover:bg-gray-700 disabled:opacity-50\",\n                children: \"Next Test Case\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 19\n              }, this), singleTestResult && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `mt-4 p-2 rounded flex items-start ${singleTestResult.passed ? \"bg-green-900/20 border border-green-800\" : \"bg-red-900/20 border-red-800\"}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `mr-2 font-bold ${singleTestResult.passed ? \"text-green-500\" : \"text-red-500\"}`,\n                  children: singleTestResult.passed ? \"✓\" : \"✗\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-mono\",\n                      children: \"Input: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 382,\n                      columnNumber: 50\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-mono text-gray-400\",\n                      children: singleTestResult.input\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 382,\n                      columnNumber: 92\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-mono\",\n                      children: \"Expected: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 383,\n                      columnNumber: 50\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-mono text-gray-400\",\n                      children: singleTestResult.expected\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 383,\n                      columnNumber: 95\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 383,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-mono\",\n                      children: \"Output: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 384,\n                      columnNumber: 50\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-mono text-gray-400\",\n                      children: singleTestResult.output\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 384,\n                      columnNumber: 93\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 384,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-sm font-semibold mb-2 text-gray-400\",\n                children: \"Custom Test Case\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"flex-1 px-2 py-1 rounded bg-[#1e1e1e] text-white border border-gray-700 mr-2\",\n                  placeholder: \"Enter custom input\",\n                  value: customInput,\n                  onChange: e => setCustomInput(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleRunCustomTestCase,\n                  disabled: isRunning || !customInput,\n                  className: \"px-4 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 disabled:opacity-50\",\n                  children: isRunning ? \"Running...\" : \"Run Custom Test\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 17\n              }, this), customResult !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-2 bg-[#1e1e1e] p-2 rounded text-white\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-mono\",\n                  children: \"Output: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-mono text-gray-400\",\n                  children: customResult\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this), !output && !singleTestResult && customResult === null && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-gray-500 italic\",\n              children: \"Run your code to see output here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 5\n  }, this);\n}\n_s(PracticePage, \"29CL9UYzWkwG7xwML/Wl1CLYTp8=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = PracticePage;\nvar _c;\n$RefreshReg$(_c, \"PracticePage\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","React","useState","useEffect","useLocation","useNavigate","toast","Navbar2","Editor","problems","jsxDEV","_jsxDEV","PracticePage","location","navigate","problem","setProblem","code","setCode","language","setLanguage","output","setOutput","isRunning","setIsRunning","isSubmitting","setIsSubmitting","testResults","setTestResults","testCaseIndex","setTestCaseIndex","singleTestResult","setSingleTestResult","customInput","setCustomInput","customResult","setCustomResult","input","testCases","map","tc","starterCodeTemplates","java","languageIdMapping","_location$state","problemId","state","selectedProblem","find","p","title","error","handleLanguageChange","newLanguage","runCode","console","log","token","sessionStorage","getItem","Error","response","fetch","method","headers","body","JSON","stringify","testCaseInput","result","json","handleRunSingleTestCase","length","testCase","isPassed","trim","expectedOutput","expected","passed","handleRunNextTestCase","handleRunCustomTestCase","handleCodeChange","newCode","submitCode","localStorage","process","env","REACT_APP_BACKEND_URL","id","success","message","testCode","setTimeout","results","index","Math","random","children","fileName","lineNumber","columnNumber","className","dangerouslySetInnerHTML","__html","description","category","inputFormat","outputFormat","constraints","slice","i","value","onChange","e","target","onClick","disabled","height","theme","options","minimap","enabled","fontSize","scrollBeyondLastLine","automaticLayout","tabSize","type","placeholder","_c","$RefreshReg$"],"sources":["D:/React/CodeClash/codeclash-frontend/codeclash-frontend/src/components/PracticePage.js"],"sourcesContent":["\"use client\"\n\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport Navbar2 from \"./Navbar2\";\nimport Editor from \"@monaco-editor/react\";\nimport problems from \"../data/problems.json\";\n\nexport default function PracticePage() {\n  const location = useLocation()\n  const navigate = useNavigate()\n  const [problem, setProblem] = useState(null)\n  const [code, setCode] = useState(\"\")\n  const [language, setLanguage] = useState(\"java\")\n  const [output, setOutput] = useState(\"\")\n  const [isRunning, setIsRunning] = useState(false)\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const [testResults, setTestResults] = useState([])\n  const [testCaseIndex, setTestCaseIndex] = useState(0)\n  const [singleTestResult, setSingleTestResult] = useState(null)\n  const [customInput, setCustomInput] = useState(\"\")\n  const [customResult, setCustomResult] = useState(null)\n  const input = problem?.testCases.map(tc => tc.input) || \"\"\n  \n  // Default starter code templates for different languages\n  const starterCodeTemplates = {\n    java: `class Solution {\n}`\n  }\n\n  // Add this mapping at the top of your file or before the runCode function\nconst languageIdMapping = {\n  java: 62,     \n};\n\n  useEffect(() => {\n    // Get problem from location state or redirect back to problem list\n    const problemId = location.state?.problemId;\n    if (!problemId) {\n      navigate('/problems');\n      return;\n    }\n\n    // Find the problem in problems.json\n    const selectedProblem = problems.find(p => p.title === problemId);\n    if (selectedProblem) {\n      setProblem(selectedProblem);\n      // Set initial starter code based on selected language\n      setCode(starterCodeTemplates[language] || '');\n    } else {\n      toast.error('Problem not found');\n      navigate('/problems');\n    }\n  }, [location, navigate, language])\n\n  // Change language and update starter code\n  const handleLanguageChange = (newLanguage) => {\n    setLanguage(newLanguage)\n    setCode(starterCodeTemplates[newLanguage])\n  }\n\n  // Mock function to run code (in a real app, this would send code to a backend)\n  const runCode = async () => {\n    console.log(code);\n    console.log(input);\n    setOutput(\"\")\n    try {\n      const token = sessionStorage.getItem(\"Authtoken\")\n      // console.log(token);\n      if (!token) throw new Error(\"Unauthorized\")\n      const response = await fetch(\"http://localhost:8788/api/coderun\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`,\n        },\n        body: JSON.stringify({\n          code,\n          language,\n          testCaseInput\n        }),\n      });\n      const result = await response.json();\n      setOutput(result.output);\n    } catch (error) {\n      toast.error('Error running code');\n      console.error(error);\n    } finally {\n      setIsRunning(false);\n    }\n  };\n\n\n  const handleRunSingleTestCase = async () => {\n  if (!problem || !problem.testCases || problem.testCases.length === 0) return;\n  setIsRunning(true);\n  setSingleTestResult(null);\n  const token = sessionStorage.getItem(\"Authtoken\");\n  if (!token) {\n    toast.error(\"Unauthorized\");\n    setIsRunning(false);\n    return;\n  }\n  const testCase = problem.testCases[testCaseIndex];\n  try {\n    const response = await fetch(\"http://localhost:8788/api/coderun\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`,\n      },\n      body: JSON.stringify({\n        code,\n        language,\n        testCaseInput: testCase.input\n      }),\n    });\n    const result = await response.json();\n    const isPassed = result.output.trim() === testCase.expectedOutput.trim();\n    setSingleTestResult({\n      input: testCase.input,\n      expected: testCase.expectedOutput,\n      output: result.output.trim(),\n      passed: isPassed,\n    });\n  } catch (error) {\n    setSingleTestResult({\n      input: testCase.input,\n      expected: testCase.expectedOutput,\n      output: \"Error\",\n      passed: false,\n    });\n    toast.error('Error running test case');\n  } finally {\n    setIsRunning(false);\n  }\n};\n\nconst handleRunNextTestCase = () => {\n  if (problem && testCaseIndex < problem.testCases.length - 1) {\n    setTestCaseIndex(testCaseIndex + 1);\n    setSingleTestResult(null);\n  }\n};\n\nconst handleRunCustomTestCase = async () => {\n  setIsRunning(true);\n  setCustomResult(null);\n  const token = sessionStorage.getItem(\"Authtoken\");\n  if (!token) {\n    toast.error(\"Unauthorized\");\n    setIsRunning(false);\n    return;\n  }\n  try {\n    const response = await fetch(\"http://localhost:8788/api/coderun\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`,\n      },\n      body: JSON.stringify({\n        code,\n        language,\n        testCaseInput: customInput\n      }),\n    });\n    const result = await response.json();\n    setCustomResult(result.output.trim());\n  } catch (error) {\n    setCustomResult(\"Error\");\n    toast.error('Error running custom test case');\n  } finally {\n    setIsRunning(false);\n  }\n};\n\n\n\n\n  const handleCodeChange = (newCode)=>{\n    setCode(newCode)\n  }\n\n  // Mock function to submit and test code\n  const submitCode = async () => {\n    if (!problem) {\n      toast.error('No problem selected');\n      return;\n    }\n\n    setIsSubmitting(true);\n\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/submissions`, {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          problemId: problem.id,\n          code,\n          language\n        })\n      });\n\n      const result = await response.json();\n\n      if (result.success) {\n        toast.success('Code submitted successfully!');\n        // Additional logic for successful submission\n      } else {\n        toast.error(result.message || 'Submission failed');\n      }\n    } catch (error) {\n      toast.error('Error submitting code');\n      console.error(error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const testCode = () => {\n    setIsSubmitting(true)\n    setTestResults([])\n\n    // Simulate code testing delay\n    setTimeout(() => {\n      // Mock test results\n      const results = problem.testCases.map((testCase, index) => {\n        // In a real app, you would actually run the code against the test cases\n        const passed = Math.random() > 0.3 // Random pass/fail for demo\n        return {\n          testCase,\n          passed,\n          output: passed ? testCase.output : \"Wrong output\",\n        }\n      })\n\n      setTestResults(results)\n      setIsSubmitting(false)\n    }, 1500)\n  }\n\n  if (!problem) {\n    return <div>Loading...</div>\n  }\n\n\n\n  return (\n    <div className=\"min-h-screen bg-[#1e1e1e] text-gray-200 flex flex-col\">\n      <Navbar2 />\n\n      <div className=\"flex-1 flex flex-col md:flex-row\">\n        {/* Problem Description Panel */}\n        <div className=\"md:w-1/2 p-4 overflow-y-auto border-r border-gray-700\">\n          <div className=\"max-w-2xl mx-auto\">\n            <h1 className=\"text-2xl font-bold mb-4\">{problem.title}</h1>\n\n            <div className=\"prose prose-invert max-w-none\">\n              <div className=\"mb-6\" dangerouslySetInnerHTML={{ __html: problem.description }} />\n\n              <div className=\"mb-4\">\n                <p>\n                  <strong>Category:</strong> {problem.category}\n                </p>\n                <p>\n                  <strong>Input Format:</strong> {problem.inputFormat}\n                </p>\n                <p>\n                  <strong>Output Format:</strong> {problem.outputFormat}\n                </p>\n                <p>\n                  <strong>Constraints:</strong> {problem.constraints}\n                </p>\n              </div>\n\n              <h4 className=\"font-semibold mt-6 mb-3\">Test Cases:</h4>\n              <div className=\"space-y-4\">\n                {problem.testCases.slice(0, 2).map((tc, i) => (\n                  <div key={i} className=\"bg-[#252525] p-4 rounded-md\">\n                    <div className=\"mb-2\">\n                      <span className=\"font-mono font-bold\">Input:</span>\n                      <code className=\"ml-2 bg-[#333] px-2 py-1 rounded font-mono\">{tc.input}</code>\n                    </div>\n                    <div>\n                      <span className=\"font-mono font-bold\">Output:</span>\n                      <code className=\"ml-2 bg-[#333] px-2 py-1 rounded font-mono\">{tc.output}</code>\n                    </div>\n                  </div>\n                ))}\n              </div>\n\n              {problem.testCases.length > 2 && (\n                <div className=\"mt-4 text-gray-400 italic\">\n                  {problem.testCases.length - 2} more test cases are hidden\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Code Editor Panel */}\n        <div className=\"md:w-1/2 flex flex-col\">\n          {/* Editor Controls */}\n          <div className=\"bg-[#252525] p-3 border-b border-gray-700 flex items-center\">\n            <select\n              value={language}\n              onChange={(e) => handleLanguageChange(e.target.value)}\n              className=\"bg-[#333] text-gray-200 px-3 py-1 rounded mr-4 border border-gray-600\"\n            >\n              <option value=\"java\">Java</option>\n            </select>\n\n            {/* Removed old Run Code button. Now handled in output panel per test case. */}\n\n            <button\n              onClick={submitCode}\n              disabled={isSubmitting}\n              className=\"px-4 py-1 bg-green-600 text-white rounded hover:bg-green-700 disabled:opacity-50\"\n            >\n              {isSubmitting ? \"Submitting...\" : \"Submit\"}\n            </button>\n          </div>\n\n          {/* Code Editor */}\n          <div className=\"flex-1\">\n            <Editor\n              height=\"100%\"\n              language={language}\n              value={code}\n              onChange={handleCodeChange}\n              \n              theme=\"vs-dark\"\n              options={{\n                minimap: { enabled: false },\n                fontSize: 14,\n                scrollBeyondLastLine: false,\n                automaticLayout: true,\n                tabSize: 2,\n              }}\n            />\n          </div>\n\n          {/* Output/Results Panel */}\n          <div className=\"h-1/3 bg-[#252525] overflow-y-auto border-t border-gray-700\">\n            <div className=\"p-4\">\n              {/* Console Output Tab */}\n              {output && (\n                <div>\n                  <h3 className=\"text-sm font-semibold mb-2 text-gray-400\">Console Output:</h3>\n                  <pre className=\"bg-[#1e1e1e] p-3 rounded font-mono text-sm whitespace-pre-wrap\">{output}</pre>\n                </div>\n              )}\n\n              {/* Single Test Case Result */}\n              {problem && problem.testCases && problem.testCases.length > 0 && (\n                <div className=\"mt-4\">\n                  <h3 className=\"text-sm font-semibold mb-2 text-gray-400\">Test Case {testCaseIndex + 1} of {problem.testCases.length}</h3>\n                  <button\n                    onClick={handleRunSingleTestCase}\n                    disabled={isRunning}\n                    className=\"px-4 py-1 bg-blue-600 text-white rounded mr-2 hover:bg-blue-700 disabled:opacity-50\"\n                  >\n                    {isRunning ? \"Running...\" : \"Run Test Case\"}\n                  </button>\n                  <button\n                    onClick={handleRunNextTestCase}\n                    disabled={testCaseIndex >= problem.testCases.length - 1}\n                    className=\"px-4 py-1 bg-gray-600 text-white rounded hover:bg-gray-700 disabled:opacity-50\"\n                  >\n                    Next Test Case\n                  </button>\n                  {singleTestResult && (\n                    <div className={`mt-4 p-2 rounded flex items-start ${singleTestResult.passed ? \"bg-green-900/20 border border-green-800\" : \"bg-red-900/20 border-red-800\"}`}>\n                      <div className={`mr-2 font-bold ${singleTestResult.passed ? \"text-green-500\" : \"text-red-500\"}`}>{singleTestResult.passed ? \"✓\" : \"✗\"}</div>\n                      <div className=\"flex-1\">\n                        <div className=\"text-sm\"><span className=\"font-mono\">Input: </span><span className=\"font-mono text-gray-400\">{singleTestResult.input}</span></div>\n                        <div className=\"text-sm\"><span className=\"font-mono\">Expected: </span><span className=\"font-mono text-gray-400\">{singleTestResult.expected}</span></div>\n                        <div className=\"text-sm\"><span className=\"font-mono\">Output: </span><span className=\"font-mono text-gray-400\">{singleTestResult.output}</span></div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              )}\n\n              {/* Custom Test Case */}\n              <div className=\"mt-6\">\n                <h3 className=\"text-sm font-semibold mb-2 text-gray-400\">Custom Test Case</h3>\n                <div className=\"flex items-center mb-2\">\n                  <input\n                    type=\"text\"\n                    className=\"flex-1 px-2 py-1 rounded bg-[#1e1e1e] text-white border border-gray-700 mr-2\"\n                    placeholder=\"Enter custom input\"\n                    value={customInput}\n                    onChange={e => setCustomInput(e.target.value)}\n                  />\n                  <button\n                    onClick={handleRunCustomTestCase}\n                    disabled={isRunning || !customInput}\n                    className=\"px-4 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 disabled:opacity-50\"\n                  >\n                    {isRunning ? \"Running...\" : \"Run Custom Test\"}\n                  </button>\n                </div>\n                {customResult !== null && (\n                  <div className=\"mt-2 bg-[#1e1e1e] p-2 rounded text-white\">\n                    <span className=\"font-mono\">Output: </span>\n                    <span className=\"font-mono text-gray-400\">{customResult}</span>\n                  </div>\n                )}\n              </div>\n\n              {!output && !singleTestResult && customResult === null && (\n                <div className=\"text-gray-500 italic\">Run your code to see output here</div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}