{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\CodeClash\\\\codeclash-frontend\\\\codeclash-frontend\\\\src\\\\components\\\\CodingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport Navbar2 from './Navbar2';\nimport problems from '../data/problems.json';\nimport { toast } from 'react-toastify';\nimport Script from 'next/script';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CodingPage = () => {\n  _s();\n  const [selectedProblem, setSelectedProblem] = useState(null);\n  const [language, setLanguage] = useState('java');\n  const [isRunning, setIsRunning] = useState(false);\n  const [testResults, setTestResults] = useState([]);\n  const pymRef = useRef(null);\n  const embedRef = useRef(null);\n\n  // Predefined JDoodle embed URLs for different languages\n  const JDOODLE_EMBEDS = {\n    java: 'https://www.jdoodle.com/embed/v1/c034f1e95725122e',\n    python: 'https://www.jdoodle.com/embed/v1/python3',\n    cpp: 'https://www.jdoodle.com/embed/v1/cpp'\n  };\n  useEffect(() => {\n    // Load Pym.js script dynamically\n    const script = document.createElement('script');\n    script.src = 'https://www.jdoodle.com/assets/jdoodle-pym.min.js';\n    script.async = true;\n    document.body.appendChild(script);\n\n    // Handle Pym.js initialization\n    script.onload = () => {\n      if (window.pym) {\n        pymRef.current = new window.pym.Parent('jdoodle-embed', JDOODLE_EMBEDS[language], {});\n      }\n    };\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, [language]);\n  const executeCodeOnJDoodle = async () => {\n    if (!pymRef.current) {\n      toast.error('Code editor not loaded');\n      return;\n    }\n    try {\n      // Trigger code execution through Pym.js\n      pymRef.current.sendMessage('run');\n\n      // Note: Actual output handling would require additional Pym.js communication\n      toast.success('Code execution triggered');\n      return true;\n    } catch (error) {\n      toast.error('Failed to execute code');\n      console.error(error);\n      return false;\n    }\n  };\n  const runCode = async () => {\n    if (!selectedProblem) {\n      toast.error('Please select a problem', {\n        position: 'top-right'\n      });\n      return;\n    }\n    setIsRunning(true);\n    setTestResults([]);\n    try {\n      // Trigger code execution\n      const executionResult = await executeCodeOnJDoodle();\n\n      // Simulate test case processing (actual implementation would depend on Pym.js communication)\n      const simulatedResults = selectedProblem.testCases.slice(0, 2).map(testCase => ({\n        testCase,\n        passed: executionResult && Math.random() > 0.5,\n        output: 'Execution output would be here'\n      }));\n      setTestResults(simulatedResults);\n\n      // Show overall result toast\n      const allPassed = simulatedResults.every(r => r.passed);\n      if (allPassed) {\n        toast.success('All test cases passed!', {\n          position: 'top-right'\n        });\n      } else {\n        toast.error('Some test cases failed', {\n          position: 'top-right'\n        });\n      }\n    } catch (error) {\n      toast.error('Error running code', {\n        position: 'top-right'\n      });\n    } finally {\n      setIsRunning(false);\n    }\n  };\n  const handleProblemSelect = problem => {\n    setSelectedProblem(problem);\n    // Reset code and test results when a new problem is selected\n    setCode('');\n    setTestResults([]);\n  };\n  useEffect(() => {\n    const handleMessage = event => {\n      if (event.data.type === 'code-change') {\n        setCode(event.data.code);\n      }\n    };\n    window.addEventListener('message', handleMessage);\n    return () => {\n      window.removeEventListener('message', handleMessage);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-[#1e1e1e] text-gray-200 flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 py-8 flex flex-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-1/4 pr-4 overflow-y-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Problems\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), problems.map(problem => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleProblemSelect(problem),\n          className: `p-3 mb-2 rounded cursor-pointer ${(selectedProblem === null || selectedProblem === void 0 ? void 0 : selectedProblem.name) === problem.name ? 'bg-blue-600 text-white' : 'bg-[#252525] hover:bg-[#333]'}`,\n          children: problem.title\n        }, problem.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-3/4 flex flex-col\",\n        children: selectedProblem ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-[#252525] p-6 rounded-lg mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-2xl font-bold mb-4\",\n              children: selectedProblem.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-4\",\n              children: selectedProblem.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Input Format:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this), \" \", selectedProblem.inputFormat]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Output Format:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this), \" \", selectedProblem.outputFormat]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Constraints:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this), \" \", selectedProblem.constraints]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"jdoodle-embed\",\n            ref: embedRef,\n            className: \"flex-1 mb-4\",\n            style: {\n              width: '100%',\n              height: '400px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-4 mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: language,\n              onChange: e => setLanguage(e.target.value),\n              className: \"bg-[#333] text-gray-200 px-3 py-2 rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"java\",\n                children: \"Java\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"python3\",\n                children: \"Python\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"cpp\",\n                children: \"C++\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: runCode,\n              disabled: isRunning,\n              className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 disabled:opacity-50\",\n              children: isRunning ? 'Running...' : 'Run Code'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), testResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-[#252525] p-4 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-lg font-semibold mb-4\",\n              children: \"Test Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this), testResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `p-3 mb-2 rounded ${result.passed ? 'bg-green-900/20 border border-green-800' : 'bg-red-900/20 border border-red-800'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `mr-2 font-bold ${result.passed ? 'text-green-500' : 'text-red-500'}`,\n                  children: result.passed ? '✓' : '✗'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Test Case \", index + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Input:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 25\n                }, this), \" \", result.testCase.input]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Expected Output:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 25\n                }, this), \" \", result.testCase.output]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Actual Output:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 25\n                }, this), \" \", result.output]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 23\n              }, this), result.error && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-red-500 mt-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Error:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 27\n                }, this), \" \", result.error]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 25\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center text-gray-500\",\n          children: \"Select a problem to start coding\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(CodingPage, \"Qa88jgOnUhCR/N7VXFhRopI8x0U=\");\n_c = CodingPage;\nexport default CodingPage;\nvar _c;\n$RefreshReg$(_c, \"CodingPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Navbar2","problems","toast","Script","jsxDEV","_jsxDEV","Fragment","_Fragment","CodingPage","_s","selectedProblem","setSelectedProblem","language","setLanguage","isRunning","setIsRunning","testResults","setTestResults","pymRef","embedRef","JDOODLE_EMBEDS","java","python","cpp","script","document","createElement","src","async","body","appendChild","onload","window","pym","current","Parent","removeChild","executeCodeOnJDoodle","error","sendMessage","success","console","runCode","position","executionResult","simulatedResults","testCases","slice","map","testCase","passed","Math","random","output","allPassed","every","r","handleProblemSelect","problem","setCode","handleMessage","event","data","type","code","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","title","description","inputFormat","outputFormat","constraints","id","ref","style","width","height","value","onChange","e","target","disabled","length","result","index","input","_c","$RefreshReg$"],"sources":["D:/React/CodeClash/codeclash-frontend/codeclash-frontend/src/components/CodingPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Navbar2 from './Navbar2';\nimport problems from '../data/problems.json';\nimport { toast } from 'react-toastify';\nimport Script from 'next/script';\n\nconst CodingPage = () => {\n  const [selectedProblem, setSelectedProblem] = useState(null);\n  const [language, setLanguage] = useState('java');\n  const [isRunning, setIsRunning] = useState(false);\n  const [testResults, setTestResults] = useState([]);\n  const pymRef = useRef(null);\n  const embedRef = useRef(null);\n\n  // Predefined JDoodle embed URLs for different languages\n  const JDOODLE_EMBEDS = {\n    java: 'https://www.jdoodle.com/embed/v1/c034f1e95725122e',\n    python: 'https://www.jdoodle.com/embed/v1/python3',\n    cpp: 'https://www.jdoodle.com/embed/v1/cpp'\n  };\n\n  useEffect(() => {\n    // Load Pym.js script dynamically\n    const script = document.createElement('script');\n    script.src = 'https://www.jdoodle.com/assets/jdoodle-pym.min.js';\n    script.async = true;\n    document.body.appendChild(script);\n\n    // Handle Pym.js initialization\n    script.onload = () => {\n      if (window.pym) {\n        pymRef.current = new window.pym.Parent('jdoodle-embed', JDOODLE_EMBEDS[language], {});\n      }\n    };\n\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, [language]);\n\n  const executeCodeOnJDoodle = async () => {\n    if (!pymRef.current) {\n      toast.error('Code editor not loaded');\n      return;\n    }\n\n    try {\n      // Trigger code execution through Pym.js\n      pymRef.current.sendMessage('run');\n\n      // Note: Actual output handling would require additional Pym.js communication\n      toast.success('Code execution triggered');\n      return true;\n    } catch (error) {\n      toast.error('Failed to execute code');\n      console.error(error);\n      return false;\n    }\n  };\n\n  const runCode = async () => {\n    if (!selectedProblem) {\n      toast.error('Please select a problem', { position: 'top-right' });\n      return;\n    }\n\n    setIsRunning(true);\n    setTestResults([]);\n\n    try {\n      // Trigger code execution\n      const executionResult = await executeCodeOnJDoodle();\n\n      // Simulate test case processing (actual implementation would depend on Pym.js communication)\n      const simulatedResults = selectedProblem.testCases.slice(0, 2).map(testCase => ({\n        testCase,\n        passed: executionResult && Math.random() > 0.5,\n        output: 'Execution output would be here'\n      }));\n\n      setTestResults(simulatedResults);\n\n      // Show overall result toast\n      const allPassed = simulatedResults.every((r) => r.passed);\n      if (allPassed) {\n        toast.success('All test cases passed!', { position: 'top-right' });\n      } else {\n        toast.error('Some test cases failed', { position: 'top-right' });\n      }\n    } catch (error) {\n      toast.error('Error running code', { position: 'top-right' });\n    } finally {\n      setIsRunning(false);\n    }\n  };\n\n  const handleProblemSelect = (problem) => {\n    setSelectedProblem(problem);\n    // Reset code and test results when a new problem is selected\n    setCode('');\n    setTestResults([]);\n  };\n\n  useEffect(() => {\n    const handleMessage = (event) => {\n      if (event.data.type === 'code-change') {\n        setCode(event.data.code);\n      }\n    };\n\n    window.addEventListener('message', handleMessage);\n    return () => {\n      window.removeEventListener('message', handleMessage);\n    };\n  }, []);\n\n  return (\n    <div className=\"min-h-screen bg-[#1e1e1e] text-gray-200 flex flex-col\">\n      <Navbar2 />\n      \n      <div className=\"container mx-auto px-4 py-8 flex flex-1\">\n        {/* Problem List */}\n        <div className=\"w-1/4 pr-4 overflow-y-auto\">\n          <h2 className=\"text-xl font-bold mb-4\">Problems</h2>\n          {problems.map((problem) => (\n            <div \n              key={problem.name}\n              onClick={() => handleProblemSelect(problem)}\n              className={`p-3 mb-2 rounded cursor-pointer ${\n                selectedProblem?.name === problem.name \n                  ? 'bg-blue-600 text-white' \n                  : 'bg-[#252525] hover:bg-[#333]'\n              }`}\n            >\n              {problem.title}\n            </div>\n          ))}\n        </div>\n\n        {/* Problem Details and Code Editor */}\n        <div className=\"w-3/4 flex flex-col\">\n          {selectedProblem ? (\n            <>\n              {/* Problem Description */}\n              <div className=\"bg-[#252525] p-6 rounded-lg mb-4\">\n                <h3 className=\"text-2xl font-bold mb-4\">{selectedProblem.title}</h3>\n                <p className=\"mb-4\">{selectedProblem.description}</p>\n                \n                <div className=\"mb-2\">\n                  <strong>Input Format:</strong> {selectedProblem.inputFormat}\n                </div>\n                <div className=\"mb-2\">\n                  <strong>Output Format:</strong> {selectedProblem.outputFormat}\n                </div>\n                <div>\n                  <strong>Constraints:</strong> {selectedProblem.constraints}\n                </div>\n              </div>\n\n              {/* Code Editor */}\n              <div id=\"jdoodle-embed\" ref={embedRef} className=\"flex-1 mb-4\" style={{ width: '100%', height: '400px' }}></div>\n\n              {/* Controls */}\n              <div className=\"flex space-x-4 mb-4\">\n                <select\n                  value={language}\n                  onChange={(e) => setLanguage(e.target.value)}\n                  className=\"bg-[#333] text-gray-200 px-3 py-2 rounded\"\n                >\n                  <option value=\"java\">Java</option>\n                  <option value=\"python3\">Python</option>\n                  <option value=\"cpp\">C++</option>\n                </select>\n\n                <button\n                  onClick={runCode}\n                  disabled={isRunning}\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 disabled:opacity-50\"\n                >\n                  {isRunning ? 'Running...' : 'Run Code'}\n                </button>\n              </div>\n\n              {/* Test Results */}\n              {testResults.length > 0 && (\n                <div className=\"bg-[#252525] p-4 rounded-lg\">\n                  <h4 className=\"text-lg font-semibold mb-4\">Test Results</h4>\n                  {testResults.map((result, index) => (\n                    <div \n                      key={index} \n                      className={`p-3 mb-2 rounded ${\n                        result.passed \n                          ? 'bg-green-900/20 border border-green-800' \n                          : 'bg-red-900/20 border border-red-800'\n                      }`}\n                    >\n                      <div className=\"flex items-center mb-2\">\n                        <span className={`mr-2 font-bold ${\n                          result.passed ? 'text-green-500' : 'text-red-500'\n                        }`}>\n                          {result.passed ? '✓' : '✗'}\n                        </span>\n                        <span>Test Case {index + 1}</span>\n                      </div>\n                      <div className=\"mb-1\">\n                        <strong>Input:</strong> {result.testCase.input}\n                      </div>\n                      <div className=\"mb-1\">\n                        <strong>Expected Output:</strong> {result.testCase.output}\n                      </div>\n                      <div>\n                        <strong>Actual Output:</strong> {result.output}\n                      </div>\n                      {result.error && (\n                        <div className=\"text-red-500 mt-2\">\n                          <strong>Error:</strong> {result.error}\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </>\n          ) : (\n            <div className=\"text-center text-gray-500\">\n              Select a problem to start coding\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CodingPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}