{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\CodeClash\\\\codeclash-frontend\\\\codeclash-frontend\\\\src\\\\components\\\\JoinPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Navbar2 from \"./Navbar2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JoinPage = () => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [roomCode, setRoomCode] = useState(\"\");\n  const navigate = useNavigate();\n  const token = sessionStorage.getItem(\"Authtoken\");\n  const username = localStorage.getItem(\"Username\");\n  const joinuser = async () => {\n    if (!token) {\n      console.error(\"No authentication token found.\");\n      return;\n    }\n    if (!roomCode) {\n      console.error(\"Room code is required.\");\n      return;\n    }\n    // Prevent host from joining their own room\n    const host = sessionStorage.getItem('RoomHost');\n    if (host && host === username) {\n      alert(\"You cannot join your own room.\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:8788/api/room/join?roomCode=${roomCode}&playerUsername=${username}`, {\n        method: \"POST\",\n        headers: {\n          \"Authorization\": `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          roomCode,\n          username\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status} ${response.statusText}`);\n      }\n      const data = await response.text();\n      console.log(\"Join response:\", data);\n\n      // Navigate to shared waiting room after join\n      navigate(`/waiting-room?roomCode=${roomCode}&username=${encodeURIComponent(username)}`);\n    } catch (error) {\n      console.error(\"Error joining room:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen bg-gray-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-lg w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-center mb-4\",\n          children: \"Join the Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter room code\",\n          className: \"w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 mt-2\",\n          value: roomCode,\n          onChange: e => setRoomCode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: joinuser,\n          className: \"w-full mt-4 bg-blue-500 text-white py-2 rounded-md hover:bg-blue-600 transition\",\n          children: \"Join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(JoinPage, \"8rwe/p5Fl7ys7IeXza7JU9V6d3I=\", false, function () {\n  return [useNavigate];\n});\n_c = JoinPage;\nexport default JoinPage;\nvar _c;\n$RefreshReg$(_c, \"JoinPage\");","map":{"version":3,"names":["useState","useNavigate","Navbar2","jsxDEV","_jsxDEV","JoinPage","_s","name","setName","roomCode","setRoomCode","navigate","token","sessionStorage","getItem","username","localStorage","joinuser","console","error","host","alert","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","statusText","data","text","log","encodeURIComponent","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/React/CodeClash/codeclash-frontend/codeclash-frontend/src/components/JoinPage.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Navbar2 from \"./Navbar2\";\n\nconst JoinPage = () => {\n  const [name, setName] = useState(\"\");\n  const [roomCode, setRoomCode] = useState(\"\");\n  const navigate = useNavigate();\n\n  const token = sessionStorage.getItem(\"Authtoken\");\n  const username = localStorage.getItem(\"Username\");\n\n  const joinuser = async () => {\n    if (!token) {\n      console.error(\"No authentication token found.\");\n      return;\n    }\n    if (!roomCode) {\n      console.error(\"Room code is required.\");\n      return;\n    }\n    // Prevent host from joining their own room\n    const host = sessionStorage.getItem('RoomHost');\n    if (host && host === username) {\n      alert(\"You cannot join your own room.\");\n      return;\n    }\n    try {\n      const response = await fetch(\n        `http://localhost:8788/api/room/join?roomCode=${roomCode}&playerUsername=${username}`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Authorization\": `Bearer ${token}`,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({ roomCode, username })\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status} ${response.statusText}`);\n      }\n\n      const data = await response.text();\n      console.log(\"Join response:\", data);\n\n      // Navigate to shared waiting room after join\n      navigate(`/waiting-room?roomCode=${roomCode}&username=${encodeURIComponent(username)}`);\n\n    } catch (error) {\n      console.error(\"Error joining room:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <Navbar2 />\n      <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\n        <div className=\"bg-white p-6 rounded-lg shadow-lg w-96\">\n          <h1 className=\"text-2xl font-bold text-center mb-4\">Join the Room</h1>\n          {/* Name input removed, use username from localStorage */}\n          <input\n            type=\"text\"\n            placeholder=\"Enter room code\"\n            className=\"w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 mt-2\"\n            value={roomCode}\n            onChange={(e) => setRoomCode(e.target.value)}\n          />\n          <button\n            onClick={joinuser}\n            className=\"w-full mt-4 bg-blue-500 text-white py-2 rounded-md hover:bg-blue-600 transition\"\n          >\n            Join\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default JoinPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}