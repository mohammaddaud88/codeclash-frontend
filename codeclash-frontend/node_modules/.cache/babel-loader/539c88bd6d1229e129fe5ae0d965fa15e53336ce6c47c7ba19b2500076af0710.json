{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\React\\\\CodeClash\\\\codeclash-frontend\\\\codeclash-frontend\\\\src\\\\components\\\\QuizComponent.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport { Card, CardContent } from \"./ui/card\";\nimport { Button } from \"./ui/button\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"./ui/select\";\nimport { RadioGroup, RadioGroupItem } from \"./ui/radio-group\";\nimport { Label } from \"./ui/label\";\nimport { Progress } from \"./ui/progress\";\nimport { Clock, Trophy, CheckCircle, XCircle } from \"lucide-react\";\nimport Navbar from \"./Navbar\";\nimport { useToast } from \"../hooks/use-toast\";\n\n// Import your question data here\nimport { btechCSQuestions } from \"../data/qestions/btech-cs-questions\";\nimport { btechQuestions } from \"../data/qestions/btech-questions\";\nimport { generalKnowledgeQuestions } from \"../data/qestions/general-knowledge-questions\";\nimport { logicalQuestions } from \"../data/qestions/logical-questions\";\nimport { technicalQuestions } from \"../data/qestions/technical-questions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QUESTION_TYPES = [{\n  label: \"BTech CS\",\n  value: \"btechCSQuestions\"\n}, {\n  label: \"BTech General\",\n  value: \"btechQuestions\"\n}, {\n  label: \"General Knowledge\",\n  value: \"generalKnowledgeQuestions\"\n}, {\n  label: \"Logical Reasoning\",\n  value: \"logicalQuestions\"\n}, {\n  label: \"Technical\",\n  value: \"technicalQuestions\"\n}];\nfunction shuffle(arr) {\n  return [...arr].map(v => [Math.random(), v]).sort((a, b) => a[0] - b[0]).map(a => a[1]);\n}\nfunction QuizComponent() {\n  _s();\n  const [questionType, setQuestionType] = useState(QUESTION_TYPES[0].value);\n  const [numQuestions, setNumQuestions] = useState(10);\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [quizStarted, setQuizStarted] = useState(false);\n  const [quizFinished, setQuizFinished] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(10);\n  const timerRef = useRef(null);\n  const [shuffledAnswers, setShuffledAnswers] = useState([]);\n  const [resultSaved, setResultSaved] = useState(false);\n  const [saving, setSaving] = useState(false);\n  const {\n    toast\n  } = useToast();\n  useEffect(() => {\n    if (quizStarted && questions.length > 0) {\n      setShuffledAnswers(shuffle([...(questions[currentQuestionIndex].options || questions[currentQuestionIndex].answers || [])]));\n      setTimeLeft(10);\n      setSelectedAnswer(\"\");\n    }\n  }, [quizStarted, currentQuestionIndex, questions]);\n  useEffect(() => {\n    if (!quizStarted || quizFinished) return;\n    if (timeLeft > 0) {\n      timerRef.current = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n    } else {\n      handleNextQuestion();\n    }\n    return () => clearTimeout(timerRef.current);\n  }, [quizStarted, quizFinished, timeLeft]);\n  const handleStart = () => {\n    const all = QUESTIONS_MAP[questionType] || [];\n    const selected = shuffle(all).slice(0, Math.min(numQuestions, all.length));\n    setQuestions(selected);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setQuizFinished(false);\n    setQuizStarted(true);\n    setResultSaved(false);\n  };\n  const handleAnswer = ans => {\n    setSelectedAnswer(ans);\n    if (ans === questions[currentQuestionIndex].correctAnswer || ans === questions[currentQuestionIndex].correct_answer) {\n      setScore(s => s + 1);\n    }\n    setTimeout(() => handleNextQuestion(), 800);\n  };\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(i => i + 1);\n    } else {\n      setQuizFinished(true);\n      setQuizStarted(false);\n    }\n  };\n  const handleRestart = () => {\n    setQuizStarted(false);\n    setQuizFinished(false);\n    setQuestions([]);\n    setCurrentQuestionIndex(0);\n    setScore(0);\n    setTimeLeft(10);\n    setSelectedAnswer(\"\");\n    setResultSaved(false);\n  };\n  useEffect(() => {\n    if (quizFinished && !resultSaved && questions.length > 0) {\n      setSaving(true);\n      const username = localStorage.getItem(\"Username\") || \"anonymous\";\n      const now = new Date();\n      const date = now.toISOString().split(\"T\")[0];\n      const time = now.toTimeString().split(\" \")[0];\n      const finalScore = score;\n\n      // Uncomment this for actual API call\n\n      fetch('http://localhost:8788/api/quiz/saveResult', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          score: finalScore,\n          date,\n          time,\n          No_of_questions: questions.length\n        })\n      }).then(res => res.text()).then(text => {\n        setResultSaved(true);\n        setSaving(false);\n        toast({\n          title: \"Result saved\",\n          description: `Your score of ${finalScore}/${questions.length} has been saved.`\n        });\n      }).catch(() => {\n        setSaving(false);\n        toast({\n          title: \"Error saving result\",\n          description: \"There was a problem saving your quiz result.\",\n          variant: \"destructive\"\n        });\n      });\n\n      // Simulate API call (replace with your actual API endpoint)\n      setTimeout(() => {\n        setSaving(false);\n        setResultSaved(true);\n        toast({\n          title: \"Result saved\",\n          description: `Your score of ${finalScore}/${questions.length} has been saved.`\n        });\n      }, 1000);\n    }\n  }, [quizFinished, resultSaved, questions, score, toast]);\n  const progressPercentage = quizStarted ? (currentQuestionIndex + 1) / questions.length * 100 : 0;\n  const timePercentage = timeLeft / 10 * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-b from-slate-50 to-slate-100 dark:from-slate-950 dark:to-slate-900\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container max-w-3xl mx-auto px-4 py-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-center mb-8 text-transparent bg-clip-text bg-gradient-to-r from-purple-600 to-pink-600\",\n        children: \"Interactive Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), !quizStarted && !quizFinished && /*#__PURE__*/_jsxDEV(Card, {\n        className: \"shadow-lg border-0 overflow-hidden bg-white dark:bg-slate-900\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-2 bg-gradient-to-r from-purple-500 to-pink-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          className: \"p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-semibold mb-6 text-center\",\n            children: \"Select Quiz Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"question-type\",\n                children: \"Question Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: questionType,\n                onValueChange: setQuestionType,\n                children: [/*#__PURE__*/_jsxDEV(SelectTrigger, {\n                  id: \"question-type\",\n                  className: \"w-full\",\n                  children: /*#__PURE__*/_jsxDEV(SelectValue, {\n                    placeholder: \"Select question type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(SelectContent, {\n                  children: QUESTION_TYPES.map(type => /*#__PURE__*/_jsxDEV(SelectItem, {\n                    value: type.value,\n                    children: type.label\n                  }, type.value, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"num-questions\",\n                children: \"Number of Questions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: numQuestions.toString(),\n                onValueChange: value => setNumQuestions(Number(value)),\n                children: [/*#__PURE__*/_jsxDEV(SelectTrigger, {\n                  id: \"num-questions\",\n                  className: \"w-full\",\n                  children: /*#__PURE__*/_jsxDEV(SelectValue, {\n                    placeholder: \"Select number of questions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(SelectContent, {\n                  children: [5, 10, 15, 20].map(n => /*#__PURE__*/_jsxDEV(SelectItem, {\n                    value: n.toString(),\n                    children: n\n                  }, n, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleStart,\n              className: \"w-full bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 transition-all\",\n              size: \"lg\",\n              children: \"Start Quiz\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), quizStarted && !quizFinished && questions.length > 0 && /*#__PURE__*/_jsxDEV(Card, {\n        className: \"shadow-xl border-0 overflow-hidden bg-white dark:bg-slate-900\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-2 bg-gradient-to-r from-purple-500 to-pink-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          className: \"p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"inline-flex items-center justify-center w-8 h-8 rounded-full bg-purple-100 text-purple-700 font-semibold dark:bg-purple-900 dark:text-purple-100\",\n                children: currentQuestionIndex + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm text-slate-500 dark:text-slate-400\",\n                children: [\"of \", questions.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-purple-100 dark:bg-purple-900 px-3 py-1 rounded-full\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm font-medium text-purple-700 dark:text-purple-100\",\n                children: [\"Score: \", score]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Progress, {\n            value: progressPercentage,\n            className: \"h-2 mb-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-xl font-semibold mb-4 text-slate-800 dark:text-slate-100\",\n              children: questions[currentQuestionIndex].question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n              value: selectedAnswer,\n              onValueChange: handleAnswer,\n              className: \"space-y-3\",\n              children: shuffledAnswers.map((answer, index) => {\n                const isCorrect = selectedAnswer && (answer === questions[currentQuestionIndex].correctAnswer || answer === questions[currentQuestionIndex].correct_answer);\n                const isSelected = selectedAnswer === answer;\n                const isWrong = isSelected && !isCorrect;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `relative flex items-center rounded-lg border p-4 transition-all ${!selectedAnswer ? \"hover:bg-slate-50 dark:hover:bg-slate-800\" : \"\"} ${isCorrect ? \"border-green-200 bg-green-50 dark:border-green-900 dark:bg-green-900/20\" : isWrong ? \"border-red-200 bg-red-50 dark:border-red-900 dark:bg-red-900/20\" : \"border-slate-200 dark:border-slate-700\"}`,\n                  children: [/*#__PURE__*/_jsxDEV(RadioGroupItem, {\n                    value: answer,\n                    id: `answer-${index}`,\n                    disabled: !!selectedAnswer,\n                    className: \"mr-3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Label, {\n                    htmlFor: `answer-${index}`,\n                    className: `flex-grow cursor-pointer ${isCorrect ? \"text-green-700 dark:text-green-400\" : isWrong ? \"text-red-700 dark:text-red-400\" : \"\"}`,\n                    children: answer\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 25\n                  }, this), isCorrect && /*#__PURE__*/_jsxDEV(CheckCircle, {\n                    className: \"h-5 w-5 text-green-600 dark:text-green-400 ml-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 39\n                  }, this), isWrong && /*#__PURE__*/_jsxDEV(XCircle, {\n                    className: \"h-5 w-5 text-red-600 dark:text-red-400 ml-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 37\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-3 mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(Clock, {\n              className: \"h-5 w-5 text-purple-600 dark:text-purple-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Progress, {\n              value: timePercentage,\n              className: \"h-2 flex-grow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm font-medium\",\n              children: [timeLeft, \"s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-slate-500 dark:text-slate-400 text-center\",\n            children: [\"Auto-advancing to next question in \", timeLeft, \" seconds\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), quizFinished && /*#__PURE__*/_jsxDEV(Card, {\n        className: \"shadow-xl border-0 overflow-hidden bg-white dark:bg-slate-900\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-2 bg-gradient-to-r from-purple-500 to-pink-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          className: \"p-6 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-center mb-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline-flex items-center justify-center w-24 h-24 rounded-full bg-purple-100 dark:bg-purple-900\",\n              children: /*#__PURE__*/_jsxDEV(Trophy, {\n                className: \"h-12 w-12 text-purple-600 dark:text-purple-400\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold mb-2\",\n            children: \"Quiz Completed!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-4xl font-bold text-purple-600 dark:text-purple-400 mb-1\",\n              children: [score, \" / \", questions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-slate-500 dark:text-slate-400\",\n              children: [Math.round(score / questions.length * 100), \"% Correct\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this), saving && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-slate-500 dark:text-slate-400 mb-4\",\n            children: \"Saving your results...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleRestart,\n            className: \"bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 transition-all\",\n            size: \"lg\",\n            children: \"Try Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizComponent, \"/w3B6639xrBxDjP0n8/uLh/4cDI=\", false, function () {\n  return [useToast];\n});\n_c = QuizComponent;\nexport default QuizComponent;\nvar _c;\n$RefreshReg$(_c, \"QuizComponent\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","useRef","Card","CardContent","Button","Select","SelectContent","SelectItem","SelectTrigger","SelectValue","RadioGroup","RadioGroupItem","Label","Progress","Clock","Trophy","CheckCircle","XCircle","Navbar","useToast","btechCSQuestions","btechQuestions","generalKnowledgeQuestions","logicalQuestions","technicalQuestions","jsxDEV","_jsxDEV","QUESTION_TYPES","label","value","shuffle","arr","map","v","Math","random","sort","a","b","QuizComponent","questionType","setQuestionType","numQuestions","setNumQuestions","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswer","setSelectedAnswer","score","setScore","quizStarted","setQuizStarted","quizFinished","setQuizFinished","timeLeft","setTimeLeft","timerRef","shuffledAnswers","setShuffledAnswers","resultSaved","setResultSaved","saving","setSaving","toast","length","options","answers","current","setTimeout","handleNextQuestion","clearTimeout","handleStart","all","QUESTIONS_MAP","selected","slice","min","handleAnswer","ans","correctAnswer","correct_answer","s","i","handleRestart","username","localStorage","getItem","now","Date","date","toISOString","split","time","toTimeString","finalScore","fetch","method","headers","body","JSON","stringify","No_of_questions","then","res","text","title","description","catch","variant","progressPercentage","timePercentage","className","children","fileName","lineNumber","columnNumber","htmlFor","onValueChange","id","placeholder","type","toString","Number","n","onClick","size","question","answer","index","isCorrect","isSelected","isWrong","disabled","round","_c","$RefreshReg$"],"sources":["D:/React/CodeClash/codeclash-frontend/codeclash-frontend/src/components/QuizComponent.js"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect, useRef } from \"react\"\nimport { Card, CardContent } from \"./ui/card\"\nimport { Button } from \"./ui/button\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"./ui/select\"\nimport { RadioGroup, RadioGroupItem } from \"./ui/radio-group\"\nimport { Label } from \"./ui/label\"\nimport { Progress } from \"./ui/progress\"\nimport { Clock, Trophy, CheckCircle, XCircle } from \"lucide-react\"\nimport Navbar from \"./Navbar\"\nimport { useToast } from \"../hooks/use-toast\"\n\n// Import your question data here\nimport { btechCSQuestions } from \"../data/qestions/btech-cs-questions\";\nimport { btechQuestions } from \"../data/qestions/btech-questions\";\nimport { generalKnowledgeQuestions } from \"../data/qestions/general-knowledge-questions\";\nimport { logicalQuestions } from \"../data/qestions/logical-questions\";\nimport { technicalQuestions } from \"../data/qestions/technical-questions\";\n\nconst QUESTION_TYPES = [\n  { label: \"BTech CS\", value: \"btechCSQuestions\" },\n  { label: \"BTech General\", value: \"btechQuestions\" },\n  { label: \"General Knowledge\", value: \"generalKnowledgeQuestions\" },\n  { label: \"Logical Reasoning\", value: \"logicalQuestions\" },\n  { label: \"Technical\", value: \"technicalQuestions\" },\n]\n\n\nfunction shuffle(arr) {\n  return [...arr]\n    .map((v) => [Math.random(), v])\n    .sort((a, b) => a[0] - b[0])\n    .map((a) => a[1])\n}\n\nfunction QuizComponent() {\n  const [questionType, setQuestionType] = useState(QUESTION_TYPES[0].value)\n  const [numQuestions, setNumQuestions] = useState(10)\n  const [questions, setQuestions] = useState([])\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0)\n  const [selectedAnswer, setSelectedAnswer] = useState(\"\")\n  const [score, setScore] = useState(0)\n  const [quizStarted, setQuizStarted] = useState(false)\n  const [quizFinished, setQuizFinished] = useState(false)\n  const [timeLeft, setTimeLeft] = useState(10)\n  const timerRef = useRef(null)\n  const [shuffledAnswers, setShuffledAnswers] = useState([])\n  const [resultSaved, setResultSaved] = useState(false)\n  const [saving, setSaving] = useState(false)\n  const { toast } = useToast()\n\n  useEffect(() => {\n    if (quizStarted && questions.length > 0) {\n      setShuffledAnswers(\n        shuffle([...(questions[currentQuestionIndex].options || questions[currentQuestionIndex].answers || [])]),\n      )\n      setTimeLeft(10)\n      setSelectedAnswer(\"\")\n    }\n  }, [quizStarted, currentQuestionIndex, questions])\n\n  useEffect(() => {\n    if (!quizStarted || quizFinished) return\n    if (timeLeft > 0) {\n      timerRef.current = setTimeout(() => setTimeLeft(timeLeft - 1), 1000)\n    } else {\n      handleNextQuestion()\n    }\n    return () => clearTimeout(timerRef.current)\n  }, [quizStarted, quizFinished, timeLeft])\n\n  const handleStart = () => {\n    const all = QUESTIONS_MAP[questionType] || []\n    const selected = shuffle(all).slice(0, Math.min(numQuestions, all.length))\n    setQuestions(selected)\n    setCurrentQuestionIndex(0)\n    setScore(0)\n    setQuizFinished(false)\n    setQuizStarted(true)\n    setResultSaved(false)\n  }\n\n  const handleAnswer = (ans) => {\n    setSelectedAnswer(ans)\n    if (\n      ans === questions[currentQuestionIndex].correctAnswer ||\n      ans === questions[currentQuestionIndex].correct_answer\n    ) {\n      setScore((s) => s + 1)\n    }\n    setTimeout(() => handleNextQuestion(), 800)\n  }\n\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex((i) => i + 1)\n    } else {\n      setQuizFinished(true)\n      setQuizStarted(false)\n    }\n  }\n\n  const handleRestart = () => {\n    setQuizStarted(false)\n    setQuizFinished(false)\n    setQuestions([])\n    setCurrentQuestionIndex(0)\n    setScore(0)\n    setTimeLeft(10)\n    setSelectedAnswer(\"\")\n    setResultSaved(false)\n  }\n\n  useEffect(() => {\n    if (quizFinished && !resultSaved && questions.length > 0) {\n      setSaving(true)\n      const username = localStorage.getItem(\"Username\") || \"anonymous\"\n      const now = new Date()\n      const date = now.toISOString().split(\"T\")[0]\n      const time = now.toTimeString().split(\" \")[0]\n      const finalScore = score\n\n      // Uncomment this for actual API call\n      \n      fetch('http://localhost:8788/api/quiz/saveResult', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, score: finalScore, date, time, No_of_questions: questions.length })\n      })\n        .then(res => res.text())\n        .then(text => {\n          setResultSaved(true);\n          setSaving(false);\n          toast({\n            title: \"Result saved\",\n            description: `Your score of ${finalScore}/${questions.length} has been saved.`,\n          });\n        })\n        .catch(() => {\n          setSaving(false);\n          toast({\n            title: \"Error saving result\",\n            description: \"There was a problem saving your quiz result.\",\n            variant: \"destructive\",\n          });\n        });\n    \n\n      // Simulate API call (replace with your actual API endpoint)\n      setTimeout(() => {\n        setSaving(false)\n        setResultSaved(true)\n        toast({\n          title: \"Result saved\",\n          description: `Your score of ${finalScore}/${questions.length} has been saved.`,\n        })\n      }, 1000)\n    }\n  }, [quizFinished, resultSaved, questions, score, toast])\n\n  const progressPercentage = quizStarted ? ((currentQuestionIndex + 1) / questions.length) * 100 : 0\n  const timePercentage = (timeLeft / 10) * 100\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-b from-slate-50 to-slate-100 dark:from-slate-950 dark:to-slate-900\">\n      <Navbar />\n      <main className=\"container max-w-3xl mx-auto px-4 py-8\">\n        <h1 className=\"text-3xl font-bold text-center mb-8 text-transparent bg-clip-text bg-gradient-to-r from-purple-600 to-pink-600\">\n          Interactive Quiz\n        </h1>\n\n        {!quizStarted && !quizFinished && (\n          <Card className=\"shadow-lg border-0 overflow-hidden bg-white dark:bg-slate-900\">\n            <div className=\"h-2 bg-gradient-to-r from-purple-500 to-pink-500\"></div>\n            <CardContent className=\"p-6\">\n              <h2 className=\"text-2xl font-semibold mb-6 text-center\">Select Quiz Options</h2>\n\n              <div className=\"space-y-6\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"question-type\">Question Type</Label>\n                  <Select value={questionType} onValueChange={setQuestionType}>\n                    <SelectTrigger id=\"question-type\" className=\"w-full\">\n                      <SelectValue placeholder=\"Select question type\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {QUESTION_TYPES.map((type) => (\n                        <SelectItem key={type.value} value={type.value}>\n                          {type.label}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"num-questions\">Number of Questions</Label>\n                  <Select value={numQuestions.toString()} onValueChange={(value) => setNumQuestions(Number(value))}>\n                    <SelectTrigger id=\"num-questions\" className=\"w-full\">\n                      <SelectValue placeholder=\"Select number of questions\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {[5, 10, 15, 20].map((n) => (\n                        <SelectItem key={n} value={n.toString()}>\n                          {n}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <Button\n                  onClick={handleStart}\n                  className=\"w-full bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 transition-all\"\n                  size=\"lg\"\n                >\n                  Start Quiz\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        )}\n\n        {quizStarted && !quizFinished && questions.length > 0 && (\n          <Card className=\"shadow-xl border-0 overflow-hidden bg-white dark:bg-slate-900\">\n            <div className=\"h-2 bg-gradient-to-r from-purple-500 to-pink-500\"></div>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"inline-flex items-center justify-center w-8 h-8 rounded-full bg-purple-100 text-purple-700 font-semibold dark:bg-purple-900 dark:text-purple-100\">\n                    {currentQuestionIndex + 1}\n                  </span>\n                  <span className=\"text-sm text-slate-500 dark:text-slate-400\">of {questions.length}</span>\n                </div>\n                <div className=\"bg-purple-100 dark:bg-purple-900 px-3 py-1 rounded-full\">\n                  <span className=\"text-sm font-medium text-purple-700 dark:text-purple-100\">Score: {score}</span>\n                </div>\n              </div>\n\n              <Progress value={progressPercentage} className=\"h-2 mb-6\" />\n\n              <div className=\"mb-6\">\n                <h3 className=\"text-xl font-semibold mb-4 text-slate-800 dark:text-slate-100\">\n                  {questions[currentQuestionIndex].question}\n                </h3>\n\n                <RadioGroup value={selectedAnswer} onValueChange={handleAnswer} className=\"space-y-3\">\n                  {shuffledAnswers.map((answer, index) => {\n                    const isCorrect =\n                      selectedAnswer &&\n                      (answer === questions[currentQuestionIndex].correctAnswer ||\n                        answer === questions[currentQuestionIndex].correct_answer)\n                    const isSelected = selectedAnswer === answer\n                    const isWrong = isSelected && !isCorrect\n\n                    return (\n                      <div\n                        key={index}\n                        className={`relative flex items-center rounded-lg border p-4 transition-all ${\n                          !selectedAnswer ? \"hover:bg-slate-50 dark:hover:bg-slate-800\" : \"\"\n                        } ${\n                          isCorrect\n                            ? \"border-green-200 bg-green-50 dark:border-green-900 dark:bg-green-900/20\"\n                            : isWrong\n                              ? \"border-red-200 bg-red-50 dark:border-red-900 dark:bg-red-900/20\"\n                              : \"border-slate-200 dark:border-slate-700\"\n                        }`}\n                      >\n                        <RadioGroupItem\n                          value={answer}\n                          id={`answer-${index}`}\n                          disabled={!!selectedAnswer}\n                          className=\"mr-3\"\n                        />\n                        <Label\n                          htmlFor={`answer-${index}`}\n                          className={`flex-grow cursor-pointer ${\n                            isCorrect\n                              ? \"text-green-700 dark:text-green-400\"\n                              : isWrong\n                                ? \"text-red-700 dark:text-red-400\"\n                                : \"\"\n                          }`}\n                        >\n                          {answer}\n                        </Label>\n                        {isCorrect && <CheckCircle className=\"h-5 w-5 text-green-600 dark:text-green-400 ml-2\" />}\n                        {isWrong && <XCircle className=\"h-5 w-5 text-red-600 dark:text-red-400 ml-2\" />}\n                      </div>\n                    )\n                  })}\n                </RadioGroup>\n              </div>\n\n              <div className=\"flex items-center space-x-3 mb-2\">\n                <Clock className=\"h-5 w-5 text-purple-600 dark:text-purple-400\" />\n                <Progress value={timePercentage} className=\"h-2 flex-grow\" />\n                <span className=\"text-sm font-medium\">{timeLeft}s</span>\n              </div>\n\n              <p className=\"text-xs text-slate-500 dark:text-slate-400 text-center\">\n                Auto-advancing to next question in {timeLeft} seconds\n              </p>\n            </CardContent>\n          </Card>\n        )}\n\n        {quizFinished && (\n          <Card className=\"shadow-xl border-0 overflow-hidden bg-white dark:bg-slate-900\">\n            <div className=\"h-2 bg-gradient-to-r from-purple-500 to-pink-500\"></div>\n            <CardContent className=\"p-6 text-center\">\n              <div className=\"flex justify-center mb-6\">\n                <div className=\"inline-flex items-center justify-center w-24 h-24 rounded-full bg-purple-100 dark:bg-purple-900\">\n                  <Trophy className=\"h-12 w-12 text-purple-600 dark:text-purple-400\" />\n                </div>\n              </div>\n\n              <h2 className=\"text-2xl font-bold mb-2\">Quiz Completed!</h2>\n\n              <div className=\"mb-6\">\n                <p className=\"text-4xl font-bold text-purple-600 dark:text-purple-400 mb-1\">\n                  {score} / {questions.length}\n                </p>\n                <p className=\"text-slate-500 dark:text-slate-400\">\n                  {Math.round((score / questions.length) * 100)}% Correct\n                </p>\n              </div>\n\n              {saving && <p className=\"text-sm text-slate-500 dark:text-slate-400 mb-4\">Saving your results...</p>}\n\n              <Button\n                onClick={handleRestart}\n                className=\"bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 transition-all\"\n                size=\"lg\"\n              >\n                Try Again\n              </Button>\n            </CardContent>\n          </Card>\n        )}\n      </main>\n    </div>\n  )\n}\n\nexport default QuizComponent\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}