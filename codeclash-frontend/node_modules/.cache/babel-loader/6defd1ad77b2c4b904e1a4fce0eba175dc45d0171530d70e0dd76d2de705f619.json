{"ast":null,"code":"\"use client\";\n\n// Inspired by react-hot-toast library\nvar _s = $RefreshSig$();\nimport * as React from \"react\";\nconst TOAST_LIMIT = 5;\nconst TOAST_REMOVE_DELAY = 5000; // Reduced delay for better UX\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\"\n};\nlet count = 0;\nfunction genId() {\n  count = (count + 1) % Number.MAX_VALUE;\n  return count.toString();\n}\nconst toastTimeouts = new Map();\nconst addToRemoveQueue = toastId => {\n  if (toastTimeouts.has(toastId)) return;\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId);\n    dispatch({\n      type: actionTypes.REMOVE_TOAST,\n      toastId\n    });\n  }, TOAST_REMOVE_DELAY);\n  toastTimeouts.set(toastId, timeout);\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TOAST:\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT)\n      };\n    case actionTypes.UPDATE_TOAST:\n      return {\n        ...state,\n        toasts: state.toasts.map(t => t.id === action.toast.id ? {\n          ...t,\n          ...action.toast\n        } : t)\n      };\n    case actionTypes.DISMISS_TOAST:\n      const {\n        toastId\n      } = action;\n      if (toastId) {\n        addToRemoveQueue(toastId);\n      } else {\n        state.toasts.forEach(toast => addToRemoveQueue(toast.id));\n      }\n      return {\n        ...state,\n        toasts: state.toasts.map(t => t.id === toastId || toastId === undefined ? {\n          ...t,\n          open: false\n        } : t)\n      };\n    case actionTypes.REMOVE_TOAST:\n      return {\n        ...state,\n        toasts: state.toasts.filter(t => t.id !== action.toastId)\n      };\n    default:\n      return state;\n  }\n};\nconst listeners = [];\nlet memoryState = {\n  toasts: []\n};\nfunction dispatch(action) {\n  memoryState = reducer(memoryState, action);\n  listeners.forEach(listener => listener(memoryState));\n}\nfunction toast({\n  ...props\n}) {\n  const id = genId();\n  const update = props => dispatch({\n    type: actionTypes.UPDATE_TOAST,\n    toast: {\n      ...props,\n      id\n    }\n  });\n  const dismiss = () => dispatch({\n    type: actionTypes.DISMISS_TOAST,\n    toastId: id\n  });\n  dispatch({\n    type: actionTypes.ADD_TOAST,\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: open => {\n        if (!open) dismiss();\n      }\n    }\n  });\n  return {\n    id,\n    dismiss,\n    update\n  };\n}\nfunction useToast() {\n  _s();\n  const [state, setState] = React.useState(memoryState);\n  React.useEffect(() => {\n    listeners.push(setState);\n    return () => {\n      const index = listeners.indexOf(setState);\n      if (index > -1) listeners.splice(index, 1);\n    };\n  }, []);\n  return {\n    ...state,\n    toast,\n    dismiss: toastId => dispatch({\n      type: actionTypes.DISMISS_TOAST,\n      toastId\n    })\n  };\n}\n_s(useToast, \"SPWE98mLGnlsnNfIwu/IAKTSZtk=\");\nexport { useToast, toast };","map":{"version":3,"names":["_s","$RefreshSig$","React","TOAST_LIMIT","TOAST_REMOVE_DELAY","actionTypes","ADD_TOAST","UPDATE_TOAST","DISMISS_TOAST","REMOVE_TOAST","count","genId","Number","MAX_VALUE","toString","toastTimeouts","Map","addToRemoveQueue","toastId","has","timeout","setTimeout","delete","dispatch","type","set","reducer","state","action","toasts","toast","slice","map","t","id","forEach","undefined","open","filter","listeners","memoryState","listener","props","update","dismiss","onOpenChange","useToast","setState","useState","useEffect","push","index","indexOf","splice"],"sources":["D:/React/CodeClash/codeclash-frontend/codeclash-frontend/src/components/hooks/use-toast.js"],"sourcesContent":["\"use client\";\r\n\r\n// Inspired by react-hot-toast library\r\nimport * as React from \"react\";\r\n\r\nconst TOAST_LIMIT = 5;\r\nconst TOAST_REMOVE_DELAY = 5000; // Reduced delay for better UX\r\n\r\nconst actionTypes = {\r\n  ADD_TOAST: \"ADD_TOAST\",\r\n  UPDATE_TOAST: \"UPDATE_TOAST\",\r\n  DISMISS_TOAST: \"DISMISS_TOAST\",\r\n  REMOVE_TOAST: \"REMOVE_TOAST\",\r\n};\r\n\r\nlet count = 0;\r\n\r\nfunction genId() {\r\n  count = (count + 1) % Number.MAX_VALUE;\r\n  return count.toString();\r\n}\r\n\r\nconst toastTimeouts = new Map();\r\n\r\nconst addToRemoveQueue = (toastId) => {\r\n  if (toastTimeouts.has(toastId)) return;\r\n\r\n  const timeout = setTimeout(() => {\r\n    toastTimeouts.delete(toastId);\r\n    dispatch({ type: actionTypes.REMOVE_TOAST, toastId });\r\n  }, TOAST_REMOVE_DELAY);\r\n\r\n  toastTimeouts.set(toastId, timeout);\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_TOAST:\r\n      return {\r\n        ...state,\r\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\r\n      };\r\n    case actionTypes.UPDATE_TOAST:\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) =>\r\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\r\n        ),\r\n      };\r\n    case actionTypes.DISMISS_TOAST:\r\n      const { toastId } = action;\r\n      if (toastId) {\r\n        addToRemoveQueue(toastId);\r\n      } else {\r\n        state.toasts.forEach((toast) => addToRemoveQueue(toast.id));\r\n      }\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) =>\r\n          t.id === toastId || toastId === undefined\r\n            ? { ...t, open: false }\r\n            : t\r\n        ),\r\n      };\r\n    case actionTypes.REMOVE_TOAST:\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst listeners = [];\r\nlet memoryState = { toasts: [] };\r\n\r\nfunction dispatch(action) {\r\n  memoryState = reducer(memoryState, action);\r\n  listeners.forEach((listener) => listener(memoryState));\r\n}\r\n\r\nfunction toast({ ...props }) {\r\n  const id = genId();\r\n\r\n  const update = (props) =>\r\n    dispatch({\r\n      type: actionTypes.UPDATE_TOAST,\r\n      toast: { ...props, id },\r\n    });\r\n\r\n  const dismiss = () => dispatch({ type: actionTypes.DISMISS_TOAST, toastId: id });\r\n\r\n  dispatch({\r\n    type: actionTypes.ADD_TOAST,\r\n    toast: {\r\n      ...props,\r\n      id,\r\n      open: true,\r\n      onOpenChange: (open) => {\r\n        if (!open) dismiss();\r\n      },\r\n    },\r\n  });\r\n\r\n  return { id, dismiss, update };\r\n}\r\n\r\nfunction useToast() {\r\n  const [state, setState] = React.useState(memoryState);\r\n\r\n  React.useEffect(() => {\r\n    listeners.push(setState);\r\n    return () => {\r\n      const index = listeners.indexOf(setState);\r\n      if (index > -1) listeners.splice(index, 1);\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    ...state,\r\n    toast,\r\n    dismiss: (toastId) => dispatch({ type: actionTypes.DISMISS_TOAST, toastId }),\r\n  };\r\n}\r\n\r\nexport { useToast, toast };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}