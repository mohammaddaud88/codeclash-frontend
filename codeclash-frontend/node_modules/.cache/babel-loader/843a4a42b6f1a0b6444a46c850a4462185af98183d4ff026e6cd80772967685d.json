{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\CodeClash\\\\codeclash-frontend\\\\codeclash-frontend\\\\src\\\\components\\\\WaitingRoom.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Client } from \"@stomp/stompjs\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SOCKET_URL = \"ws://192.168.9.100:8080/ws\"; // Update based on your backend\n\nconst WaitingRoom = () => {\n  _s();\n  const {\n    roomCode\n  } = useParams();\n  const [players, setPlayers] = useState([]);\n  useEffect(() => {\n    const stompClient = new Client({\n      brokerURL: SOCKET_URL,\n      onConnect: () => {\n        console.log(\"Connected to WebSocket\");\n\n        // Subscribe to the room updates\n        stompClient.subscribe(`/topic/room/${roomCode}`, message => {\n          const updatedRoom = JSON.parse(message.body);\n          setPlayers(updatedRoom.players);\n        });\n      }\n    });\n    stompClient.activate();\n    return () => {\n      stompClient.deactivate();\n    };\n  }, [roomCode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"waiting-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Waiting Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Room Code: \", roomCode]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Players:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: players.map((player, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: player\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(WaitingRoom, \"rLAeAyM6hOPr9OTS4yLfQ8sJfbo=\", false, function () {\n  return [useParams];\n});\n_c = WaitingRoom;\nexport default WaitingRoom;\nvar _c;\n$RefreshReg$(_c, \"WaitingRoom\");","map":{"version":3,"names":["useEffect","useState","Client","useParams","jsxDEV","_jsxDEV","SOCKET_URL","WaitingRoom","_s","roomCode","players","setPlayers","stompClient","brokerURL","onConnect","console","log","subscribe","message","updatedRoom","JSON","parse","body","activate","deactivate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","player","index","_c","$RefreshReg$"],"sources":["D:/React/CodeClash/codeclash-frontend/codeclash-frontend/src/components/WaitingRoom.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Client } from \"@stomp/stompjs\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst SOCKET_URL = \"ws://192.168.9.100:8080/ws\"; // Update based on your backend\r\n\r\nconst WaitingRoom = () => {\r\n  const { roomCode } = useParams();\r\n  const [players, setPlayers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const stompClient = new Client({\r\n      brokerURL: SOCKET_URL,\r\n      onConnect: () => {\r\n        console.log(\"Connected to WebSocket\");\r\n\r\n        // Subscribe to the room updates\r\n        stompClient.subscribe(`/topic/room/${roomCode}`, (message) => {\r\n          const updatedRoom = JSON.parse(message.body);\r\n          setPlayers(updatedRoom.players);\r\n        });\r\n      },\r\n    });\r\n\r\n    stompClient.activate();\r\n\r\n    return () => {\r\n      stompClient.deactivate();\r\n    };\r\n  }, [roomCode]);\r\n\r\n  return (\r\n    <div className=\"waiting-room\">\r\n      <h2>Waiting Room</h2>\r\n      <p>Room Code: {roomCode}</p>\r\n      <h3>Players:</h3>\r\n      <ul>\r\n        {players.map((player, index) => (\r\n          <li key={index}>{player}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WaitingRoom;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,gBAAgB;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,UAAU,GAAG,4BAA4B,CAAC,CAAC;;AAEjD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAS,CAAC,GAAGN,SAAS,CAAC,CAAC;EAChC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,MAAMY,WAAW,GAAG,IAAIV,MAAM,CAAC;MAC7BW,SAAS,EAAEP,UAAU;MACrBQ,SAAS,EAAEA,CAAA,KAAM;QACfC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;;QAErC;QACAJ,WAAW,CAACK,SAAS,CAAC,eAAeR,QAAQ,EAAE,EAAGS,OAAO,IAAK;UAC5D,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACI,IAAI,CAAC;UAC5CX,UAAU,CAACQ,WAAW,CAACT,OAAO,CAAC;QACjC,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;IAEFE,WAAW,CAACW,QAAQ,CAAC,CAAC;IAEtB,OAAO,MAAM;MACXX,WAAW,CAACY,UAAU,CAAC,CAAC;IAC1B,CAAC;EACH,CAAC,EAAE,CAACf,QAAQ,CAAC,CAAC;EAEd,oBACEJ,OAAA;IAAKoB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BrB,OAAA;MAAAqB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBzB,OAAA;MAAAqB,QAAA,GAAG,aAAW,EAACjB,QAAQ;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BzB,OAAA;MAAAqB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBzB,OAAA;MAAAqB,QAAA,EACGhB,OAAO,CAACqB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzB5B,OAAA;QAAAqB,QAAA,EAAiBM;MAAM,GAAdC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAC7B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACtB,EAAA,CArCID,WAAW;EAAA,QACMJ,SAAS;AAAA;AAAA+B,EAAA,GAD1B3B,WAAW;AAuCjB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}