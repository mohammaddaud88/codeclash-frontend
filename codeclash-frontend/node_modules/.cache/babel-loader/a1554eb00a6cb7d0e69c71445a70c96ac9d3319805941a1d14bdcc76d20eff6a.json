{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\CodeClash\\\\codeclash-frontend\\\\codeclash-frontend\\\\src\\\\components\\\\WaitingRoomForJoinPlayers.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport { Client } from \"@stomp/stompjs\";\nimport { useNavigate } from \"react-router-dom\";\nimport Navbar2 from \"./Navbar2\";\nimport \"../styling/waitingForRoomJoin.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SOCKET_URL = \"ws://localhost:8788/ws\"; // Your WebSocket URL\n\nconst WaitingRoom = () => {\n  _s();\n  const queryParams = new URLSearchParams(window.location.search);\n  const roomCode = queryParams.get(\"roomCode\");\n  const name = queryParams.get(\"name\");\n  console.log(\"Extracted Room Code:\", roomCode);\n  console.log(\"Extracted Name:\", name);\n  const navigate = useNavigate();\n  const username = localStorage.getItem(\"Username\"); // Get user's name\n\n  const [players, setPlayers] = useState([]);\n  const [timeLeft, setTimeLeft] = useState(120); // Default timer\n  const [isLoading, setIsLoading] = useState(true);\n  const stompClientRef = useRef(null);\n  useEffect(() => {\n    if (!roomCode) {\n      console.error(\"❌ Room code is undefined! Subscription will fail.\");\n      return;\n    }\n    if (!stompClientRef.current) {\n      stompClientRef.current = new Client({\n        brokerURL: SOCKET_URL,\n        debug: str => console.log(\"WebSocket Debug:\", str),\n        reconnectDelay: 5000,\n        // Auto-reconnect after 5s if disconnected\n        onConnect: frame => {\n          console.log(\"✅ Connected to WebSocket:\", frame);\n          const client = stompClientRef.current;\n          client.subscribe(`/topic/room/${roomCode}`, message => {\n            console.log(\"📩 Received Message:\", message.body);\n            try {\n              const updatedRoom = JSON.parse(message.body);\n              console.log(\"📝 Updated Room Data:\", updatedRoom);\n              let updatedPlayers = updatedRoom.players || [];\n              if (!updatedPlayers.includes(updatedRoom.host)) {\n                updatedPlayers.push(updatedRoom.host);\n              }\n              console.log(\"👥 Updated Players:\", updatedPlayers);\n              setPlayers(updatedPlayers);\n              setTimeLeft(updatedRoom.timer);\n              setIsLoading(false);\n            } catch (error) {\n              console.error(\"❌ Error parsing message body:\", error);\n            }\n          });\n          console.log(`📡 Subscribed to /topic/room/${roomCode}`);\n        }\n      });\n      stompClientRef.current.activate();\n    }\n    return () => {\n      if (stompClientRef.current) {\n        stompClientRef.current.deactivate();\n        stompClientRef.current = null;\n        console.log(\"🛑 WebSocket Disconnected.\");\n      }\n    };\n  }, []); // 🔹 Empty dependency array to ensure this runs **only once** on mount\n\n  // Countdown Timer (Sync with Host)\n  useEffect(() => {\n    if (timeLeft <= 0) {\n      navigate(\"/\"); // Redirect to home page when time runs out\n      return;\n    }\n    const timer = setInterval(() => {\n      setTimeLeft(prev => prev > 0 ? prev - 1 : 0);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [timeLeft, navigate]);\n\n  // Handle Cancel Button Click\n  const handleCancel = () => {\n    navigate(\"/\"); // Redirect to home page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"waiting-room\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"host-title\",\n        children: [\"\\uD83D\\uDC64 Username: \", username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"room-code\",\n        children: [\"Room Code: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: roomCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-status\",\n        children: \"\\uD83C\\uDF89 Welcome to the Game Room!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countdown\",\n        children: [\"\\u23F3 Test starts in: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"timer\",\n          children: [timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loading-text\",\n          children: \"Waiting for players...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"players-title\",\n        children: \"Players in Room:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"players-list\",\n        children: players.map((player, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"player-item fade-in\",\n          children: player\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cancel-button\",\n        onClick: handleCancel,\n        children: \"Exit Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(WaitingRoom, \"ttahE7uVGX/+hKYWniEDoQMACKg=\", false, function () {\n  return [useNavigate];\n});\n_c = WaitingRoom;\nexport default WaitingRoom;\nvar _c;\n$RefreshReg$(_c, \"WaitingRoom\");","map":{"version":3,"names":["useEffect","useState","useRef","Client","useNavigate","Navbar2","jsxDEV","_jsxDEV","SOCKET_URL","WaitingRoom","_s","queryParams","URLSearchParams","window","location","search","roomCode","get","name","console","log","navigate","username","localStorage","getItem","players","setPlayers","timeLeft","setTimeLeft","isLoading","setIsLoading","stompClientRef","error","current","brokerURL","debug","str","reconnectDelay","onConnect","frame","client","subscribe","message","body","updatedRoom","JSON","parse","updatedPlayers","includes","host","push","timer","activate","deactivate","setInterval","prev","clearInterval","handleCancel","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","player","index","onClick","_c","$RefreshReg$"],"sources":["D:/React/CodeClash/codeclash-frontend/codeclash-frontend/src/components/WaitingRoomForJoinPlayers.js"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\r\nimport { Client } from \"@stomp/stompjs\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Navbar2 from \"./Navbar2\";\r\nimport \"../styling/waitingForRoomJoin.css\";\r\n\r\nconst SOCKET_URL = \"ws://localhost:8788/ws\"; // Your WebSocket URL\r\n\r\nconst WaitingRoom = () => {\r\n  const queryParams = new URLSearchParams(window.location.search);\r\n  const roomCode = queryParams.get(\"roomCode\");\r\n  const name = queryParams.get(\"name\");\r\n\r\n  console.log(\"Extracted Room Code:\", roomCode);\r\n  console.log(\"Extracted Name:\", name);\r\n\r\n  const navigate = useNavigate();\r\n  const username = localStorage.getItem(\"Username\"); // Get user's name\r\n\r\n  const [players, setPlayers] = useState([]);\r\n  const [timeLeft, setTimeLeft] = useState(120); // Default timer\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const stompClientRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!roomCode) {\r\n      console.error(\"❌ Room code is undefined! Subscription will fail.\");\r\n      return;\r\n    }\r\n\r\n    if (!stompClientRef.current) {\r\n      stompClientRef.current = new Client({\r\n        brokerURL: SOCKET_URL,\r\n        debug: (str) => console.log(\"WebSocket Debug:\", str),\r\n        reconnectDelay: 5000, // Auto-reconnect after 5s if disconnected\r\n        onConnect: (frame) => {\r\n          console.log(\"✅ Connected to WebSocket:\", frame);\r\n          const client = stompClientRef.current;\r\n\r\n          client.subscribe(`/topic/room/${roomCode}`, (message) => {\r\n            console.log(\"📩 Received Message:\", message.body);\r\n            try {\r\n              const updatedRoom = JSON.parse(message.body);\r\n              console.log(\"📝 Updated Room Data:\", updatedRoom);\r\n\r\n              let updatedPlayers = updatedRoom.players || [];\r\n              if (!updatedPlayers.includes(updatedRoom.host)) {\r\n                updatedPlayers.push(updatedRoom.host);\r\n              }\r\n\r\n              console.log(\"👥 Updated Players:\", updatedPlayers);\r\n              setPlayers(updatedPlayers);\r\n              setTimeLeft(updatedRoom.timer);\r\n              setIsLoading(false);\r\n            } catch (error) {\r\n              console.error(\"❌ Error parsing message body:\", error);\r\n            }\r\n          });\r\n\r\n          console.log(`📡 Subscribed to /topic/room/${roomCode}`);\r\n        },\r\n      });\r\n\r\n      stompClientRef.current.activate();\r\n    }\r\n\r\n    return () => {\r\n      if (stompClientRef.current) {\r\n        stompClientRef.current.deactivate();\r\n        stompClientRef.current = null;\r\n        console.log(\"🛑 WebSocket Disconnected.\");\r\n      }\r\n    };\r\n  }, []); // 🔹 Empty dependency array to ensure this runs **only once** on mount\r\n\r\n  // Countdown Timer (Sync with Host)\r\n  useEffect(() => {\r\n    if (timeLeft <= 0) {\r\n      navigate(\"/\"); // Redirect to home page when time runs out\r\n      return;\r\n    }\r\n\r\n    const timer = setInterval(() => {\r\n      setTimeLeft((prev) => (prev > 0 ? prev - 1 : 0));\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [timeLeft, navigate]);\r\n\r\n  // Handle Cancel Button Click\r\n  const handleCancel = () => {\r\n    navigate(\"/\"); // Redirect to home page\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar2 />\r\n      <div className=\"waiting-room\">\r\n        {/* User's Name (Instead of Host) */}\r\n        <h2 className=\"host-title\">👤 Username: {username}</h2>\r\n\r\n        {/* Room Code */}\r\n        <p className=\"room-code\">Room Code: <strong>{roomCode}</strong></p>\r\n\r\n        {/* Welcome Status */}\r\n        <div className=\"welcome-status\">🎉 Welcome to the Game Room!</div>\r\n\r\n        {/* Countdown Timer */}\r\n        <div className=\"countdown\">\r\n          ⏳ Test starts in: <span className=\"timer\">{timeLeft}s</span>\r\n        </div>\r\n\r\n        {/* Loading Animation */}\r\n        {isLoading && (\r\n          <div className=\"loading-container\">\r\n            <div className=\"spinner\"></div>\r\n            <p className=\"loading-text\">Waiting for players...</p>\r\n          </div>\r\n        )}\r\n\r\n        {/* Players List */}\r\n        <h3 className=\"players-title\">Players in Room:</h3>\r\n        <ul className=\"players-list\">\r\n          {players.map((player, index) => (\r\n            <li key={index} className=\"player-item fade-in\">\r\n              {player}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n\r\n        {/* Exit Button */}\r\n        <button className=\"cancel-button\" onClick={handleCancel}>\r\n          Exit Room\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WaitingRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}