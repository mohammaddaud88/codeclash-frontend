{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\React\\\\CodeClash\\\\codeclash-frontend\\\\codeclash-frontend\\\\src\\\\components\\\\PracticePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport Navbar2 from \"./Navbar2\";\nimport Editor from \"@monaco-editor/react\";\nimport problems from \"../data/problems.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PracticePage() {\n  _s();\n  var _problem$testCases, _problem$testCases2, _problem$testCases4, _problem$testCases5;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [problem, setProblem] = useState(null);\n  const [code, setCode] = useState(\"\");\n  const [language, setLanguage] = useState(\"java\");\n  const [output, setOutput] = useState(\"\");\n  const [isRunning, setIsRunning] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [testResults, setTestResults] = useState([]);\n  const [testCaseIndex, setTestCaseIndex] = useState(0);\n  const [testCaseOutput, setTestCaseOutput] = useState(\"\");\n  const [testCasePassed, setTestCasePassed] = useState(false);\n  const [testCaseInput, setTestCaseInput] = useState(\"\");\n  const [currentTestCase, setCurrentTestCase] = useState(null);\n  const input = (problem === null || problem === void 0 ? void 0 : (_problem$testCases = problem.testCases) === null || _problem$testCases === void 0 ? void 0 : _problem$testCases.map(tc => tc.input)) || \"\";\n\n  // Function to run a single test case\n  const runSingleTestCase = async testCase => {\n    if (!problem || !testCase) {\n      toast.error('No test case selected');\n      return;\n    }\n    setIsRunning(true);\n    setCurrentTestCase(testCase);\n    try {\n      const token = sessionStorage.getItem(\"Authtoken\");\n      if (!token) {\n        throw new Error(\"Unauthorized\");\n      }\n      const response = await fetch(\"http://localhost:8788/api/coderun\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          className: \"Solution\",\n          code: code,\n          input: testCase.input\n        })\n      });\n      const rawOutput = (await response.text()).trim();\n      // Normalize line endings and trim\n      const actualOutput = rawOutput.replace(/\\r\\n/g, '\\n').trim();\n      const expectedOutput = (testCase.output || '').replace(/\\r\\n/g, '\\n').trim();\n\n      // Debug log\n      console.log('Actual:', JSON.stringify(actualOutput));\n      console.log('Expected:', JSON.stringify(expectedOutput));\n\n      // Optionally, ignore all whitespace differences\n      // const normalize = str => str.replace(/\\s+/g, ' ').trim();\n      // const isPassed = normalize(actualOutput) === normalize(expectedOutput);\n      const isPassed = actualOutput === expectedOutput;\n\n      // Update test results\n      setTestResults(prevResults => [...prevResults, {\n        testCase,\n        output: actualOutput,\n        passed: isPassed\n      }]);\n\n      // Update current test case result\n      setTestCaseOutput(actualOutput);\n      setTestCasePassed(isPassed);\n      if (isPassed) {\n        toast.success('Test case passed!');\n      } else {\n        toast.error('Test case failed');\n      }\n    } catch (error) {\n      toast.error('Error running test case');\n      console.error(error);\n    } finally {\n      setIsRunning(false);\n    }\n  };\n\n  // Default starter code templates for different languages\n  const starterCodeTemplates = {\n    java: `class Solution {\n}`\n  };\n\n  // Add this mapping at the top of your file or before the runCode function\n  const languageIdMapping = {\n    java: 62\n  };\n  useEffect(() => {\n    var _location$state;\n    // Get problem from location state or redirect back to problem list\n    const problemId = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.problemId;\n    if (!problemId) {\n      navigate('/problems');\n      return;\n    }\n\n    // Find the problem in problems.json\n    const selectedProblem = problems.find(p => p.title === problemId);\n    if (selectedProblem) {\n      setProblem(selectedProblem);\n      // Set initial starter code based on selected language\n      setCode(starterCodeTemplates[language] || '');\n    } else {\n      toast.error('Problem not found');\n      navigate('/problems');\n    }\n  }, [location, navigate, language]);\n\n  // Change language and update starter code\n  const handleLanguageChange = newLanguage => {\n    setLanguage(newLanguage);\n    setCode(starterCodeTemplates[newLanguage]);\n  };\n\n  // Mock function to run code (in a real app, this would send code to a backend)\n  const runCode = async () => {\n    console.log(code);\n    console.log(input);\n    setOutput(\"\");\n    try {\n      const token = sessionStorage.getItem(\"Authtoken\");\n      // console.log(token);\n      if (!token) throw new Error(\"Unauthorized\");\n      const response = await fetch(\"http://localhost:8788/api/coderun\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          className: \"Solution\",\n          code,\n          input: input[testCaseIndex]\n        })\n      });\n      const output = (await response.text()).trim();\n      setOutput(output);\n      console.log(output);\n    } catch (error) {\n      toast.error('Error running code');\n      console.error(error);\n    } finally {\n      setIsRunning(false);\n    }\n  };\n  const handleCodeChange = newCode => {\n    setCode(newCode);\n  };\n\n  // Mock function to submit and test code\n  const submitCode = async () => {\n    if (!problem) {\n      toast.error('No problem selected');\n      return;\n    }\n    setIsSubmitting(true);\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/submissions`, {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          problemId: problem.id,\n          code,\n          language\n        })\n      });\n      const result = await response.json();\n      if (result.success) {\n        toast.success('Code submitted successfully!');\n        // Additional logic for successful submission\n      } else {\n        toast.error(result.message || 'Submission failed');\n      }\n    } catch (error) {\n      toast.error('Error submitting code');\n      console.error(error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const testCode = () => {\n    setIsSubmitting(true);\n    setTestResults([]);\n\n    // Simulate code testing delay\n    setTimeout(() => {\n      // Mock test results\n      const results = problem.testCases.map((testCase, index) => {\n        // In a real app, you would actually run the code against the test cases\n        const passed = Math.random() > 0.3; // Random pass/fail for demo\n        return {\n          testCase,\n          passed,\n          output: passed ? testCase.output : \"Wrong output\"\n        };\n      });\n      setTestResults(results);\n      setIsSubmitting(false);\n    }, 1500);\n  };\n  if (!problem) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-[#1e1e1e] text-gray-200 flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col md:flex-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"md:w-1/2 p-4 overflow-y-auto border-r border-gray-700\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"max-w-2xl mx-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold mb-4\",\n            children: problem.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prose prose-invert max-w-none\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-6\",\n              dangerouslySetInnerHTML: {\n                __html: problem.description\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Category:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 19\n                }, this), \" \", problem.category]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Input Format:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 19\n                }, this), \" \", problem.inputFormat]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Output Format:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 19\n                }, this), \" \", problem.outputFormat]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Constraints:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 19\n                }, this), \" \", problem.constraints]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"font-semibold mt-6 mb-3\",\n              children: \"Test Cases:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: problem.testCases.slice(0, 2).map((tc, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-[#252525] p-4 rounded-md\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-mono font-bold\",\n                    children: \"Input:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n                    className: \"ml-2 bg-[#333] px-2 py-1 rounded font-mono\",\n                    children: tc.input\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-mono font-bold\",\n                    children: \"Output:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n                    className: \"ml-2 bg-[#333] px-2 py-1 rounded font-mono\",\n                    children: tc.output\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 21\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), problem.testCases.length > 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4 text-gray-400 italic\",\n              children: [problem.testCases.length - 2, \" more test cases are hidden\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"md:w-1/2 flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-[#252525] p-3 border-b border-gray-700 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: language,\n            onChange: e => handleLanguageChange(e.target.value),\n            className: \"bg-[#333] text-gray-200 px-3 py-1 rounded mr-4 border border-gray-600\",\n            children: /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"java\",\n              children: \"Java\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (problem && problem.testCases && problem.testCases.length > 0) {\n                runSingleTestCase(problem.testCases[testCaseIndex]);\n              }\n            },\n            disabled: isRunning || !(problem !== null && problem !== void 0 && (_problem$testCases2 = problem.testCases) !== null && _problem$testCases2 !== void 0 && _problem$testCases2.length),\n            className: \"px-4 py-1 bg-blue-600 text-white rounded mr-2 hover:bg-blue-700 disabled:opacity-50\",\n            children: isRunning ? \"Running...\" : \"Run Test Case\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              var _problem$testCases3;\n              if (testCaseIndex < (problem === null || problem === void 0 ? void 0 : (_problem$testCases3 = problem.testCases) === null || _problem$testCases3 === void 0 ? void 0 : _problem$testCases3.length) - 1) {\n                setTestCaseIndex(testCaseIndex + 1);\n                setCurrentTestCase(null);\n              }\n            },\n            disabled: testCaseIndex >= (problem === null || problem === void 0 ? void 0 : (_problem$testCases4 = problem.testCases) === null || _problem$testCases4 === void 0 ? void 0 : _problem$testCases4.length) - 1,\n            className: \"px-4 py-1 bg-gray-600 text-white rounded hover:bg-gray-700 disabled:opacity-50\",\n            children: \"Next Test Case\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-4 text-sm text-gray-400\",\n            children: [testCaseIndex + 1, \"/\", (problem === null || problem === void 0 ? void 0 : (_problem$testCases5 = problem.testCases) === null || _problem$testCases5 === void 0 ? void 0 : _problem$testCases5.length) || 0, \" test cases\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: submitCode,\n            disabled: isSubmitting,\n            className: \"px-4 py-1 bg-green-600 text-white rounded hover:bg-green-700 disabled:opacity-50\",\n            children: isSubmitting ? \"Submitting...\" : \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: '500px',\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(Editor, {\n            height: \"100%\",\n            width: \"100%\",\n            language: language,\n            value: code,\n            onChange: handleCodeChange,\n            theme: \"vs-dark\",\n            options: {\n              minimap: {\n                enabled: false\n              },\n              fontSize: 14,\n              scrollBeyondLastLine: false,\n              automaticLayout: true,\n              tabSize: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-1/3 bg-[#252525] border-t border-gray-700 flex flex-col\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 overflow-y-auto flex-1\",\n            style: {\n              maxHeight: '300px'\n            },\n            children: [output && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-sm font-semibold mb-2 text-gray-400\",\n                children: \"Console Output:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                className: \"bg-[#1e1e1e] p-3 rounded font-mono text-sm whitespace-pre-wrap\",\n                children: output\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-sm font-semibold mb-2 text-gray-400\",\n                children: \"Custom Input:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"w-full h-24 bg-[#1e1e1e] text-gray-200 p-2 rounded font-mono text-sm border border-gray-700\",\n                placeholder: \"Enter your input here (multiple lines supported)\",\n                value: testCaseInput,\n                onChange: e => setTestCaseInput(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  if (testCaseInput) {\n                    // Create a custom test case object\n                    const customTestCase = {\n                      input: testCaseInput,\n                      output: '' // We don't know the expected output\n                    };\n                    runSingleTestCase(customTestCase);\n                  } else {\n                    toast.error('Please enter input first');\n                  }\n                },\n                disabled: isRunning || !testCaseInput,\n                className: \"mt-2 px-4 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 disabled:opacity-50\",\n                children: isRunning ? \"Running...\" : \"Run with Custom Input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this), currentTestCase && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-sm font-semibold mb-2 text-gray-400\",\n                children: \"Current Test Case:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-2 rounded flex items-start\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mr-2 font-bold text-gray-400\",\n                    children: \"Input:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 404,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex-1\",\n                    children: /*#__PURE__*/_jsxDEV(\"code\", {\n                      className: \"font-mono text-gray-400\",\n                      children: currentTestCase.input\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 406,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 405,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-2 rounded flex items-start\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mr-2 font-bold text-gray-400\",\n                    children: \"Expected Output:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 410,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex-1\",\n                    children: /*#__PURE__*/_jsxDEV(\"code\", {\n                      className: \"font-mono text-gray-400\",\n                      children: currentTestCase.output\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 412,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 411,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 17\n            }, this), testResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-sm font-semibold mb-2 text-gray-400\",\n                children: \"Test Results:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-2\",\n                children: testResults.map((result, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `p-2 rounded flex items-start ${result.passed ? \"bg-green-900/20 border border-green-800\" : \"bg-red-900/20 border border-red-800\"}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `mr-2 font-bold ${result.passed ? \"text-green-500\" : \"text-red-500\"}`,\n                    children: result.passed ? \"✓\" : \"✗\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 432,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-sm\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"font-mono\",\n                        children: \"Input: \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 437,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"font-mono text-gray-400\",\n                        children: result.testCase.input\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 438,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 436,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-sm\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"font-mono\",\n                        children: \"Expected: \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 441,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"font-mono text-gray-400\",\n                        children: result.testCase.output\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 442,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 440,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-sm\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"font-mono\",\n                        children: \"Output: \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 445,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"font-mono text-gray-400\",\n                        children: result.output\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 446,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 444,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 435,\n                    columnNumber: 25\n                  }, this)]\n                }, idx, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-4 text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `font-bold ${testResults.every(r => r.passed) ? \"text-green-500\" : \"text-red-500\"}`,\n                  children: [testResults.filter(r => r.passed).length, \"/\", testResults.length - 1, \" tests passed\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 17\n            }, this), !currentTestCase && !testResults.length && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-gray-500 italic\",\n              children: \"Run a test case to see results here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this);\n}\n_s(PracticePage, \"2TSwVsMhqdQx1Sq07vpp1J7QFn8=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = PracticePage;\nvar _c;\n$RefreshReg$(_c, \"PracticePage\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","React","useState","useEffect","useLocation","useNavigate","toast","Navbar2","Editor","problems","jsxDEV","_jsxDEV","PracticePage","_problem$testCases","_problem$testCases2","_problem$testCases4","_problem$testCases5","location","navigate","problem","setProblem","code","setCode","language","setLanguage","output","setOutput","isRunning","setIsRunning","isSubmitting","setIsSubmitting","testResults","setTestResults","testCaseIndex","setTestCaseIndex","testCaseOutput","setTestCaseOutput","testCasePassed","setTestCasePassed","testCaseInput","setTestCaseInput","currentTestCase","setCurrentTestCase","input","testCases","map","tc","runSingleTestCase","testCase","error","token","sessionStorage","getItem","Error","response","fetch","method","headers","body","JSON","stringify","className","rawOutput","text","trim","actualOutput","replace","expectedOutput","console","log","isPassed","prevResults","passed","success","starterCodeTemplates","java","languageIdMapping","_location$state","problemId","state","selectedProblem","find","p","title","handleLanguageChange","newLanguage","runCode","handleCodeChange","newCode","submitCode","localStorage","process","env","REACT_APP_BACKEND_URL","id","result","json","message","testCode","setTimeout","results","index","Math","random","children","fileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","description","category","inputFormat","outputFormat","constraints","slice","i","length","value","onChange","e","target","onClick","disabled","_problem$testCases3","style","height","width","theme","options","minimap","enabled","fontSize","scrollBeyondLastLine","automaticLayout","tabSize","maxHeight","placeholder","customTestCase","idx","every","r","filter","_c","$RefreshReg$"],"sources":["D:/React/CodeClash/codeclash-frontend/codeclash-frontend/src/components/PracticePage.js"],"sourcesContent":["\"use client\"\n\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport Navbar2 from \"./Navbar2\";\nimport Editor from \"@monaco-editor/react\";\nimport problems from \"../data/problems.json\";\n\nexport default function PracticePage() {\n  const location = useLocation()\n  const navigate = useNavigate()\n  const [problem, setProblem] = useState(null)\n  const [code, setCode] = useState(\"\")\n  const [language, setLanguage] = useState(\"java\")\n  const [output, setOutput] = useState(\"\")\n  const [isRunning, setIsRunning] = useState(false)\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const [testResults, setTestResults] = useState([])\n  const [testCaseIndex, setTestCaseIndex] = useState(0)\n  const [testCaseOutput, setTestCaseOutput] = useState(\"\")\n  const [testCasePassed, setTestCasePassed] = useState(false)\n  const [testCaseInput, setTestCaseInput] = useState(\"\")\n  const [currentTestCase, setCurrentTestCase] = useState(null)\n  const input = problem?.testCases?.map(tc => tc.input) || \"\"\n\n  // Function to run a single test case\n  const runSingleTestCase = async (testCase) => {\n    if (!problem || !testCase) {\n      toast.error('No test case selected');\n      return;\n    }\n    \n    setIsRunning(true);\n    setCurrentTestCase(testCase);\n\n    try {\n      const token = sessionStorage.getItem(\"Authtoken\");\n      if (!token) {\n        throw new Error(\"Unauthorized\");\n      }\n\n      const response = await fetch(\"http://localhost:8788/api/coderun\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`,\n        },\n        body: JSON.stringify({\n          className: \"Solution\",\n          code: code,\n          input: testCase.input\n        }),\n      });\n\n      const rawOutput = (await response.text()).trim();\n      // Normalize line endings and trim\n      const actualOutput = rawOutput.replace(/\\r\\n/g, '\\n').trim();\n      const expectedOutput = (testCase.output || '').replace(/\\r\\n/g, '\\n').trim();\n      \n      // Debug log\n      console.log('Actual:', JSON.stringify(actualOutput));\n      console.log('Expected:', JSON.stringify(expectedOutput));\n      \n      // Optionally, ignore all whitespace differences\n      // const normalize = str => str.replace(/\\s+/g, ' ').trim();\n      // const isPassed = normalize(actualOutput) === normalize(expectedOutput);\n      const isPassed = actualOutput === expectedOutput;\n      \n      // Update test results\n      setTestResults(prevResults => [...prevResults, {\n        testCase,\n        output: actualOutput,\n        passed: isPassed\n      }]);\n\n      // Update current test case result\n      setTestCaseOutput(actualOutput);\n      setTestCasePassed(isPassed);\n      \n      if (isPassed) {\n        toast.success('Test case passed!');\n      } else {\n        toast.error('Test case failed');\n      }\n    } catch (error) {\n      toast.error('Error running test case');\n      console.error(error);\n    } finally {\n      setIsRunning(false);\n    }\n  };\n\n  // Default starter code templates for different languages\n  const starterCodeTemplates = {\n    java: `class Solution {\n}`\n  }\n\n  // Add this mapping at the top of your file or before the runCode function\n  const languageIdMapping = {\n    java: 62,\n  };\n\n  useEffect(() => {\n    // Get problem from location state or redirect back to problem list\n    const problemId = location.state?.problemId;\n    if (!problemId) {\n      navigate('/problems');\n      return;\n    }\n\n    // Find the problem in problems.json\n    const selectedProblem = problems.find(p => p.title === problemId);\n    if (selectedProblem) {\n      setProblem(selectedProblem);\n      // Set initial starter code based on selected language\n      setCode(starterCodeTemplates[language] || '');\n    } else {\n      toast.error('Problem not found');\n      navigate('/problems');\n    }\n  }, [location, navigate, language])\n\n  // Change language and update starter code\n  const handleLanguageChange = (newLanguage) => {\n    setLanguage(newLanguage)\n    setCode(starterCodeTemplates[newLanguage])\n  }\n\n  // Mock function to run code (in a real app, this would send code to a backend)\n  const runCode = async () => {\n    console.log(code);\n    console.log(input);\n    setOutput(\"\")\n    try {\n      const token = sessionStorage.getItem(\"Authtoken\")\n      // console.log(token);\n      if (!token) throw new Error(\"Unauthorized\")\n      const response = await fetch(\"http://localhost:8788/api/coderun\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`,\n        },\n        body: JSON.stringify({\n          className:\"Solution\",\n          code,\n          input:input[testCaseIndex],\n          \n        }),\n      });\n      const output = (await response.text()).trim();\n      setOutput(output);\n      console.log(output);\n    } catch (error) {\n      toast.error('Error running code');\n      console.error(error);\n    } finally {\n      setIsRunning(false);\n    }\n  };\n\n  const handleCodeChange = (newCode) => {\n    setCode(newCode)\n  }\n\n  // Mock function to submit and test code\n  const submitCode = async () => {\n    if (!problem) {\n      toast.error('No problem selected');\n      return;\n    }\n\n    setIsSubmitting(true);\n\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/submissions`, {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          problemId: problem.id,\n          code,\n          language\n        })\n      });\n\n      const result = await response.json();\n\n      if (result.success) {\n        toast.success('Code submitted successfully!');\n        // Additional logic for successful submission\n      } else {\n        toast.error(result.message || 'Submission failed');\n      }\n    } catch (error) {\n      toast.error('Error submitting code');\n      console.error(error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const testCode = () => {\n    setIsSubmitting(true)\n    setTestResults([])\n\n    // Simulate code testing delay\n    setTimeout(() => {\n      // Mock test results\n      const results = problem.testCases.map((testCase, index) => {\n        // In a real app, you would actually run the code against the test cases\n        const passed = Math.random() > 0.3 // Random pass/fail for demo\n        return {\n          testCase,\n          passed,\n          output: passed ? testCase.output : \"Wrong output\",\n        }\n      })\n\n      setTestResults(results)\n      setIsSubmitting(false)\n    }, 1500)\n  }\n\n  if (!problem) {\n    return <div>Loading...</div>\n  }\n\n\n\n  return (\n    <div className=\"min-h-screen bg-[#1e1e1e] text-gray-200 flex flex-col\">\n      <Navbar2 />\n\n      <div className=\"flex-1 flex flex-col md:flex-row\">\n        {/* Problem Description Panel */}\n        <div className=\"md:w-1/2 p-4 overflow-y-auto border-r border-gray-700\">\n          <div className=\"max-w-2xl mx-auto\">\n            <h1 className=\"text-2xl font-bold mb-4\">{problem.title}</h1>\n\n            <div className=\"prose prose-invert max-w-none\">\n              <div className=\"mb-6\" dangerouslySetInnerHTML={{ __html: problem.description }} />\n\n              <div className=\"mb-4\">\n                <p>\n                  <strong>Category:</strong> {problem.category}\n                </p>\n                <p>\n                  <strong>Input Format:</strong> {problem.inputFormat}\n                </p>\n                <p>\n                  <strong>Output Format:</strong> {problem.outputFormat}\n                </p>\n                <p>\n                  <strong>Constraints:</strong> {problem.constraints}\n                </p>\n              </div>\n\n              <h4 className=\"font-semibold mt-6 mb-3\">Test Cases:</h4>\n              <div className=\"space-y-4\">\n                {problem.testCases.slice(0, 2).map((tc, i) => (\n                  <div key={i} className=\"bg-[#252525] p-4 rounded-md\">\n                    <div className=\"mb-2\">\n                      <span className=\"font-mono font-bold\">Input:</span>\n                      <code className=\"ml-2 bg-[#333] px-2 py-1 rounded font-mono\">{tc.input}</code>\n                    </div>\n                    <div>\n                      <span className=\"font-mono font-bold\">Output:</span>\n                      <code className=\"ml-2 bg-[#333] px-2 py-1 rounded font-mono\">{tc.output}</code>\n                    </div>\n                  </div>\n                ))}\n              </div>\n\n              {problem.testCases.length > 2 && (\n                <div className=\"mt-4 text-gray-400 italic\">\n                  {problem.testCases.length - 2} more test cases are hidden\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Code Editor Panel */}\n        <div className=\"md:w-1/2 flex flex-col\">\n          {/* Editor Controls */}\n          <div className=\"bg-[#252525] p-3 border-b border-gray-700 flex items-center\">\n            <select\n              value={language}\n              onChange={(e) => handleLanguageChange(e.target.value)}\n              className=\"bg-[#333] text-gray-200 px-3 py-1 rounded mr-4 border border-gray-600\"\n            >\n              <option value=\"java\">Java</option>\n            </select>\n\n            <button\n              onClick={() => {\n                if (problem && problem.testCases && problem.testCases.length > 0) {\n                  runSingleTestCase(problem.testCases[testCaseIndex]);\n                }\n              }}\n              disabled={isRunning || !problem?.testCases?.length}\n              className=\"px-4 py-1 bg-blue-600 text-white rounded mr-2 hover:bg-blue-700 disabled:opacity-50\"\n            >\n              {isRunning ? \"Running...\" : \"Run Test Case\"}\n            </button>\n\n            <button\n              onClick={() => {\n                if (testCaseIndex < problem?.testCases?.length - 1) {\n                  setTestCaseIndex(testCaseIndex + 1);\n                  setCurrentTestCase(null);\n                }\n              }}\n              disabled={testCaseIndex >= problem?.testCases?.length - 1}\n              className=\"px-4 py-1 bg-gray-600 text-white rounded hover:bg-gray-700 disabled:opacity-50\"\n            >\n              Next Test Case\n            </button>\n\n            <span className=\"ml-4 text-sm text-gray-400\">\n              {testCaseIndex + 1}/{problem?.testCases?.length || 0} test cases\n            </span>\n\n            <button\n              onClick={submitCode}\n              disabled={isSubmitting}\n              className=\"px-4 py-1 bg-green-600 text-white rounded hover:bg-green-700 disabled:opacity-50\"\n            >\n              {isSubmitting ? \"Submitting...\" : \"Submit\"}\n            </button>\n          </div>\n\n          {/* Code Editor */}\n          <div style={{ height: '500px', width: '100%' }}>\n            <Editor\n              height=\"100%\"\n              width=\"100%\"\n              language={language}\n              value={code}\n              onChange={handleCodeChange}\n              theme=\"vs-dark\"\n              options={{\n                minimap: { enabled: false },\n                fontSize: 14,\n                scrollBeyondLastLine: false,\n                automaticLayout: true,\n                tabSize: 2,\n              }}\n            />\n          </div>\n\n          {/* Output/Results Panel */}\n          <div className=\"h-1/3 bg-[#252525] border-t border-gray-700 flex flex-col\">\n            <div className=\"p-4 overflow-y-auto flex-1\" style={{ maxHeight: '300px' }}>\n              {/* Console Output Tab */}\n              {output && (\n                <div>\n                  <h3 className=\"text-sm font-semibold mb-2 text-gray-400\">Console Output:</h3>\n                  <pre className=\"bg-[#1e1e1e] p-3 rounded font-mono text-sm whitespace-pre-wrap\">{output}</pre>\n                </div>\n              )}\n              \n              {/* Custom Input Section */}\n              <div className=\"mt-4\">\n                <h3 className=\"text-sm font-semibold mb-2 text-gray-400\">Custom Input:</h3>\n                <textarea\n                  className=\"w-full h-24 bg-[#1e1e1e] text-gray-200 p-2 rounded font-mono text-sm border border-gray-700\"\n                  placeholder=\"Enter your input here (multiple lines supported)\"\n                  value={testCaseInput}\n                  onChange={(e) => setTestCaseInput(e.target.value)}\n                ></textarea>\n                <button\n                  onClick={() => {\n                    if (testCaseInput) {\n                      // Create a custom test case object\n                      const customTestCase = {\n                        input: testCaseInput,\n                        output: '' // We don't know the expected output\n                      };\n                      runSingleTestCase(customTestCase);\n                    } else {\n                      toast.error('Please enter input first');\n                    }\n                  }}\n                  disabled={isRunning || !testCaseInput}\n                  className=\"mt-2 px-4 py-1 bg-purple-600 text-white rounded hover:bg-purple-700 disabled:opacity-50\"\n                >\n                  {isRunning ? \"Running...\" : \"Run with Custom Input\"}\n                </button>\n              </div>\n\n              {/* Current Test Case */}\n              {currentTestCase && (\n                <div className=\"mt-4\">\n                  <h3 className=\"text-sm font-semibold mb-2 text-gray-400\">Current Test Case:</h3>\n                  <div className=\"space-y-2\">\n                    <div className=\"p-2 rounded flex items-start\">\n                      <div className=\"mr-2 font-bold text-gray-400\">Input:</div>\n                      <div className=\"flex-1\">\n                        <code className=\"font-mono text-gray-400\">{currentTestCase.input}</code>\n                      </div>\n                    </div>\n                    <div className=\"p-2 rounded flex items-start\">\n                      <div className=\"mr-2 font-bold text-gray-400\">Expected Output:</div>\n                      <div className=\"flex-1\">\n                        <code className=\"font-mono text-gray-400\">{currentTestCase.output}</code>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Test Results Tab */}\n              {testResults.length > 0 && (\n                <div className=\"mt-4\">\n                  <h3 className=\"text-sm font-semibold mb-2 text-gray-400\">Test Results:</h3>\n                  <div className=\"space-y-2\">\n                    {testResults.map((result, idx) => (\n                      <div\n                        key={idx}\n                        className={`p-2 rounded flex items-start ${result.passed\n                            ? \"bg-green-900/20 border border-green-800\"\n                            : \"bg-red-900/20 border border-red-800\"\n                          }`}\n                      >\n                        <div className={`mr-2 font-bold ${result.passed ? \"text-green-500\" : \"text-red-500\"}`}>\n                          {result.passed ? \"✓\" : \"✗\"}\n                        </div>\n                        <div className=\"flex-1\">\n                          <div className=\"text-sm\">\n                            <span className=\"font-mono\">Input: </span>\n                            <span className=\"font-mono text-gray-400\">{result.testCase.input}</span>\n                          </div>\n                          <div className=\"text-sm\">\n                            <span className=\"font-mono\">Expected: </span>\n                            <span className=\"font-mono text-gray-400\">{result.testCase.output}</span>\n                          </div>\n                          <div className=\"text-sm\">\n                            <span className=\"font-mono\">Output: </span>\n                            <span className=\"font-mono text-gray-400\">{result.output}</span>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n\n                  <div className=\"mt-4 text-center\">\n                    <span\n                      className={`font-bold ${testResults.every((r) => r.passed) ? \"text-green-500\" : \"text-red-500\"}`}\n                    >\n                      {testResults.filter((r) => r.passed).length}/{testResults.length-1} tests passed\n                    </span>\n                  </div>\n                </div>\n              )}\n\n              {!currentTestCase && !testResults.length && (\n                <div className=\"text-gray-500 italic\">Run a test case to see results here</div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}