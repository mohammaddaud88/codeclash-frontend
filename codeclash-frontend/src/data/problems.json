[
  {
    "title": "Solve Me First",
    "name": "solve-me-first",
    "category": "Arithmetic",
    "description": "Given two integers a and b, compute and print their sum.",
    "inputFormat": "Two space-separated integers on a single line.",
    "outputFormat": "Print a single integer representing the sum.",
    "constraints": "0 <= a, b <= 1000",
    "testCases": [
      { "input": "2 3", "output": "5" },
      { "input": "100 200", "output": "300" },
      { "input": "0 0", "output": "0" },
      { "input": "999 1", "output": "1000" },
      { "input": "123 456", "output": "579" }
    ]
  },
  {
    "title": "Simple Array Sum",
    "name": "simple-array-sum",
    "category": "Array",
    "description": "Given an array of integers, find the sum of its elements.",
    "inputFormat": "First line contains n (the number of elements). Second line contains n space-separated integers.",
    "outputFormat": "Print a single integer denoting the sum of the array elements.",
    "constraints": "0 <= n <= 1000, -1000 <= arr[i] <= 1000",
    "testCases": [
      { "input": "6\n1 2 3 4 10 11", "output": "31" },
      { "input": "2\n-5 5", "output": "0" },
      { "input": "0\n", "output": "0" },
      { "input": "4\n100 200 300 400", "output": "1000" },
      { "input": "3\n-1 -2 -3", "output": "-6" }
    ]
  },
  {
    "title": "Compare the Triplets",
    "name": "compare-the-triplets",
    "category": "Array",
    "description": "Alice and Bob each have three scores. Compare corresponding scores and award a point to the higher score.",
    "inputFormat": "Two lines, each with three space-separated integers.",
    "outputFormat": "Two integers a and b representing Alice's and Bob's points, respectively.",
    "constraints": "1 <= scores <= 100",
    "testCases": [
      { "input": "5 6 7\n3 6 10", "output": "1 1" },
      { "input": "17 28 30\n99 16 8", "output": "2 1" },
      { "input": "1 1 1\n1 1 1", "output": "0 0" },
      { "input": "2 3 4\n4 3 2", "output": "1 1" },
      { "input": "10 20 30\n30 20 10", "output": "1 1" }
    ]
  },
  {
    "title": "A Very Big Sum",
    "name": "a-very-big-sum",
    "category": "Arithmetic",
    "description": "Calculate the sum of a list of long integers.",
    "inputFormat": "First line contains n. Second line contains n space-separated integers.",
    "outputFormat": "Print a single integer denoting the sum.",
    "constraints": "1 <= n <= 10^5, each element up to 10^10",
    "testCases": [
      { "input": "5\n1000000001 1000000002 1000000003 1000000004 1000000005", "output": "5000000015" },
      { "input": "1\n9999999999", "output": "9999999999" },
      { "input": "3\n-1000000000 0 1000000000", "output": "0" },
      { "input": "4\n5000000000 5000000000 5000000000 5000000000", "output": "20000000000" },
      { "input": "2\n123456789123 987654321987", "output": "1111111111110" }
    ]
  },
  {
    "title": "Diagonal Difference",
    "name": "diagonal-difference",
    "category": "Matrix",
    "description": "Compute the absolute difference between the sums of the matrix's two diagonals.",
    "inputFormat": "First line contains n. Next n lines each contain n space-separated integers.",
    "outputFormat": "Print a single integer: the absolute diagonal difference.",
    "constraints": "1 <= n <= 100, -1000 <= elements <= 1000",
    "testCases": [
      { "input": "3\n11 2 4\n4 5 6\n10 8 12", "output": "15" },
      { "input": "1\n5", "output": "0" },
      { "input": "2\n1 2\n3 4", "output": "0" },
      { "input": "4\n1 2 3 4\n5 6 7 8\n9 10 11 12\n13 14 15 16", "output": "0" },
      { "input": "3\n-1 -2 -3\n-4 -5 -6\n-7 -8 -9", "output": "0" }
    ]
  },
  {
    "title": "Plus Minus",
    "name": "plus-minus",
    "category": "Array",
    "description": "Calculate and print the ratios of positive, negative and zero values in the array.",
    "inputFormat": "First line contains n. Second line contains n space-separated integers.",
    "outputFormat": "Print three lines, each with a decimal value (6 places) for positive, negative, and zero ratios.",
    "constraints": "1 <= n <= 100, -100 <= arr[i] <= 100",
    "testCases": [
      { "input": "6\n-4 3 -9 0 4 1", "output": "0.500000\n0.333333\n0.166667" },
      { "input": "3\n0 0 0", "output": "0.000000\n0.000000\n1.000000" },
      { "input": "1\n5", "output": "1.000000\n0.000000\n0.000000" },
      { "input": "5\n-1 -1 -1 -1 -1", "output": "0.000000\n1.000000\n0.000000" },
      { "input": "4\n1 -1 0 0", "output": "0.250000\n0.250000\n0.500000" }
    ]
  },
  {
    "title": "Staircase",
    "name": "staircase",
    "category": "Pattern",
    "description": "Print a right-aligned staircase of height n using '#'.",  
    "inputFormat": "A single integer n.",
    "outputFormat": "n lines of '#' characters forming a staircase.",
    "constraints": "1 <= n <= 100",
    "testCases": [
      { "input": "4", "output": "   #\n  ##\n ###\n####" },
      { "input": "1", "output": "#" },
      { "input": "2", "output": " #\n##" },
      { "input": "5", "output": "    #\n   ##\n  ###\n ####\n#####" },
      { "input": "3", "output": "  #\n ##\n###" }
    ]
  },
  {
    "title": "Mini-Max Sum",
    "name": "mini-max-sum",
    "category": "Array",
    "description": "Given five positive integers, find the minimum and maximum values that can be calculated by summing exactly four of the five integers.",
    "inputFormat": "Five space-separated integers.",
    "outputFormat": "Two space-separated integers: the min sum and max sum.",
    "constraints": "Each integer <= 10^9",
    "testCases": [
      { "input": "1 2 3 4 5", "output": "10 14" },
      { "input": "5 5 5 5 5", "output": "20 20" },
      { "input": "7 69 2 221 8974", "output": "299 9271" },
      { "input": "1000000000 1000000000 1000000000 1000000000 1000000000", "output": "4000000000 4000000000" },
      { "input": "3 1 1 1 2", "output": "5 8" }
    ]
  },
  {
    "title": "Time Conversion",
    "name": "time-conversion",
    "category": "String",
    "description": "Convert time from 12-hour AM/PM format to 24-hour format.",
    "inputFormat": "A single string in the format hh:mm:ssAM or hh:mm:ssPM.",
    "outputFormat": "Time in 24-hour format (HH:MM:SS).",
    "constraints": "Valid 12-hour time format.",
    "testCases": [
      { "input": "07:05:45PM", "output": "19:05:45" },
      { "input": "12:00:00AM", "output": "00:00:00" },
      { "input": "12:45:54PM", "output": "12:45:54" },
      { "input": "01:00:00AM", "output": "01:00:00" },
      { "input": "11:59:59PM", "output": "23:59:59" }
    ]
  }
]
